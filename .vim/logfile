Vim: Warning: Output is not to a terminal
sourcing "$VIM/vimrc"[?25l[J
line 1: " All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just[J

line 2: " /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime[J

line 3: " you can find below.  If you wish to change any of those settings, you should[J

line 4: " do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten[J

line 5: " everytime an upgrade of the vim packages is performed.  It is recommended to[J

line 6: " make changes after sourcing debian.vim since it alters the value of the[J

line 7: " 'compatible' option.[J

line 8: [J

line 9: " This line should not be removed as it ensures that various options are[J

line 10: " properly set to work with the Vim-related packages available in Debian.[J

line 11: runtime! debian.vim[J

Searching for "debian.vim" in "/home/jsuggs/.vim,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/debian.vim"[J
Searching for "/usr/share/vim/vimfiles/debian.vim"[J
Searching for "/usr/share/vim/vim71/debian.vim"[J
line 11: sourcing "/usr/share/vim/vim71/debian.vim"[J
line 1: [J

line 2: " Debian system-wide default configuration Vim[J

line 3: [J

line 4: set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after[J

line 5: [J

line 6: " Normally we use vim-extensions. If you want true vi-compatibility[J

line 7: " remove change the following statements[J

line 8: set nocompatible^I" Use Vim defaults instead of 100% vi compatibility[J

line 9: set backspace=indent,eol,start^I" more powerful backspacing[J

line 10: [J

line 11: " Now we set some defaults for the editor[J

line 12: set history=50^I^I" keep 50 lines of command line history[J

line 13: set ruler^I^I" show the cursor position all the time[J

line 14: [J

line 15: " modelines have historically been a source of security/resource[J

line 16: " vulnerabilities -- disable by default, even when 'nocompatible' is set[J

line 17: set nomodeline[J

line 18: [J

line 19: " Suffixes that get lower priority when doing tab completion for filenames.[J

line 20: " These are files we are not likely to want to edit or read.[J

line 21: set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc[J

line 22: [J

line 23: " We know xterm-debian is a color terminal[J

line 24: if &term =~ "xterm-debian" || &term =~ "xterm-xfree86"[J

line 25:   set t_Co=16[J

line 26:   set t_Sf=^[[3%dm[J

line 27:   set t_Sb=^[[4%dm[J

line 28: endif[J

line 29: [J

line 30: "if has("autocmd")[J

line 31:  " Enabled file type detection[J

line 32:  " Use the default filetype settings. If you also want to load indent files[J

line 33:  " to automatically do language-dependent indenting add 'indent' as well.[J

line 34: " filetype plugin on[J

line 35: "endif " has ("autocmd")[J

line 36: [J

line 37: " Some Debian-specific things[J

line 38: if has("autocmd")[J

line 39:   " set mail filetype for reportbug's temp files[J

line 40:   augroup debian[J

line 41:     au BufRead reportbug.*^I^Iset ft=mail[J

line 42:     au BufRead reportbug-*^I^Iset ft=mail[J

line 43:   augroup END[J

line 44: endif[J

line 45: [J

line 46: " Set paper size from /etc/papersize if available (Debian-specific)[J

line 47: if filereadable("/etc/papersize")[J

line 48:   try[J

line 49:     let s:shellbak = &shell[J

line 50:     let &shell="/bin/sh"[J

line 51:     let s:papersize = matchstr(system("cat /etc/papersize"), "\\p*")[J

Calling shell to execute: "(cat /etc/papersize) >/tmp/v278939/0"[J
[?12l[?25h
line 52:     let &shell=s:shellbak[?25l[J

line 53:     if strlen(s:papersize)[J

line 54:       let &printoptions = "paper:" . s:papersize[J

line 55:     endif[J

line 56:   catch /^Vim\%((\a\+)\)\=:E145/[J

line 57:   endtry[J

line 58: endif[J

line 59: [J

line 60: if has('gui_running')[J

line 61:   " Make shift-insert work like in Xterm[J

line 62:   map <S-Insert> <MiddleMouse>[J

line 63:   map! <S-Insert> <MiddleMouse>[J

line 64: endif[J

finished sourcing /usr/share/vim/vim71/debian.vim[J
continuing in /usr/share/vim/vimrc[J
Searching for "/usr/share/vim/vimfiles/after/debian.vim"[J
Searching for "/home/jsuggs/.vim/after/debian.vim"[J
line 12: [J

line 13: " Uncomment the next line to make Vim more Vi-compatible[J

line 14: " NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous[J

line 15: " options, so any other options should be set AFTER setting 'compatible'.[J

line 16: "set compatible[J

line 17: [J

line 18: " Vim5 and later versions support syntax highlighting. Uncommenting the next[J

line 19: " line enables syntax highlighting by default.[J

line 20: "syntax on[J

line 21: [J

line 22: " If using a dark background within the editing area and syntax highlighting[J

line 23: " turn on this option as well[J

line 24: "set background=dark[J

line 25: [J

line 26: " Uncomment the following to have Vim jump to the last position when[J

line 27: " reopening a file[J

line 28: "if has("autocmd")[J

line 29: "  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")[J

line 30: "    \| exe "normal! g'\"" | endif[J

line 31: "endif[J

line 32: [J

line 33: " Uncomment the following to have Vim load indentation rules and plugins[J

line 34: " according to the detected filetype.[J

line 35: "if has("autocmd")[J

line 36: "  filetype plugin indent on[J

line 37: "endif[J

line 38: [J

line 39: " The following are commented out as they cause vim to behave a lot[J

line 40: " differently from regular Vi. They are highly recommended though.[J

line 41: "set showcmd^I^I" Show (partial) command in status line.[J

line 42: "set showmatch^I^I" Show matching brackets.[J

line 43: "set ignorecase^I^I" Do case insensitive matching[J

line 44: "set smartcase^I^I" Do smart case matching[J

line 45: "set incsearch^I^I" Incremental search[J

line 46: "set autowrite^I^I" Automatically save before commands like :next and :make[J

line 47: "set hidden             " Hide buffers when they are abandoned[J

line 48: "set mouse=a^I^I" Enable mouse usage (all modes) in terminals[J

line 49: [J

line 50: " Source a global configuration file if available[J

line 51: " XXX Deprecated, please move your changes here in /etc/vim/vimrc[J

line 52: if filereadable("/etc/vim/vimrc.local")[J

line 53:   source /etc/vim/vimrc.local[J

line 54: endif[J

line 55: [J

finished sourcing $VIM/vimrc[J
sourcing "$HOME/.vimrc"[J
line 1: set showmode[J

line 2: set ignorecase[J

line 3: set nowrapscan[J

line 4: set showmatch[J

line 5: set expandtab[J

line 6: set shiftwidth=4[J

line 7: set softtabstop=4[J

line 8: set tabstop=4[J

line 9: set smarttab[J

line 10: set lbr[J

line 11: set hardtabs=4[J

line 12: set si[J

line 13: set cpo=ceFs[J

line 14: set sta[J

line 15: set number[J

line 16: set hlsearch[J

line 17: set showcmd[J

line 18: set incsearch[J

line 19: syntax on[J

line 19: so $VIMRUNTIME/syntax/syntax.vim[J

line 19: sourcing "/usr/share/vim/vim71/syntax/syntax.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 04[J

line 4: [J

line 5: " This file is used for ":syntax on".[J

line 6: " It installs the autocommands and starts highlighting for all buffers.[J

line 7: [J

line 8: if !has("syntax")[J

line 9:   finish[J

line 10: endif[J

line 11: [J

line 12: " If Syntax highlighting appears to be on already, turn it off first, so that[J

line 13: " any leftovers are cleared.[J

line 14: if exists("syntax_on") || exists("syntax_manual")[J

line 15:   so <sfile>:p:h/nosyntax.vim[J

line 16: endif[J

line 17: [J

line 18: " Load the Syntax autocommands and set the default methods for highlighting.[J

line 19: runtime syntax/synload.vim[J

Searching for "syntax/synload.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/synload.vim"[J
Searching for "/var/lib/vim/addons/syntax/synload.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/synload.vim"[J
Searching for "/usr/share/vim/vim71/syntax/synload.vim"[J
line 19: sourcing "/usr/share/vim/vim71/syntax/synload.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2006 Apr 30[J

line 4: [J

line 5: " This file sets up for syntax highlighting.[J

line 6: " It is loaded from "syntax.vim" and "manual.vim".[J

line 7: " 1. Set the default highlight groups.[J

line 8: " 2. Install Syntax autocommands for all the available syntax files.[J

line 9: [J

line 10: if !has("syntax")[J

line 11:   finish[J

line 12: endif[J

line 13: [J

line 14: " let others know that syntax has been switched on[J

line 15: let syntax_on = 1[J

line 16: [J

line 17: " Set the default highlighting colors.  Use a color scheme if specified.[J

line 18: if exists("colors_name")[J

line 19:   exe "colors " . colors_name[J

line 20: else[J

line 21:   runtime! syntax/syncolor.vim[J

Searching for "syntax/syncolor.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 21: sourcing "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 12[J

line 4: [J

line 5: " This file sets up the default methods for highlighting.[J

line 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".[J

line 7: " Also used from init_highlight().[J

line 8: [J

line 9: if !exists("syntax_cmd") || syntax_cmd == "on"[J

line 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links[J

line 11:   command -nargs=* SynColor hi <args>[J

line 12:   command -nargs=* SynLink hi link <args>[J

line 13: else[J

line 14:   if syntax_cmd == "enable"[J

line 15:     " ":syntax enable" keeps any existing colors[J

line 16:     command -nargs=* SynColor hi def <args>[J

line 17:     command -nargs=* SynLink hi def link <args>[J

line 18:   elseif syntax_cmd == "reset"[J

line 19:     " ":syntax reset" resets all colors to the default[J

line 20:     command -nargs=* SynColor hi <args>[J

line 21:     command -nargs=* SynLink hi! link <args>[J

line 22:   else[J

line 23:     " User defined syncolor file has already set the colors.[J

line 24:     finish[J

line 25:   endif[J

line 26: endif[J

line 27: [J

line 28: " Many terminals can only use six different colors (plus black and white).[J

line 29: " Therefore the number of colors used is kept low. It doesn't look nice with[J

line 30: " too many colors anyway.[J

line 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.[J

line 32: " There are two sets of defaults: for a dark and a light background.[J

line 33: if &background == "dark"[J

line 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 43: else[J

line 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 44: hi Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 45: hi Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 46: hi Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 47: hi Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 48: hi Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 49: hi PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 50: hi Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 51: hi Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 52: hi Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 53: endif[J

line 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 56: [J

line 57: " Common groups that link to default highlighting.[J

line 58: " You can specify other highlighting easily.[J

line 59: SynLink String^I^IConstant[J

line 59: hi link String^I^IConstant[J

line 60: SynLink Character^IConstant[J

line 60: hi link Character^IConstant[J

line 61: SynLink Number^I^IConstant[J

line 61: hi link Number^I^IConstant[J

line 62: SynLink Boolean^I^IConstant[J

line 62: hi link Boolean^I^IConstant[J

line 63: SynLink Float^I^INumber[J

line 63: hi link Float^I^INumber[J

line 64: SynLink Function^IIdentifier[J

line 64: hi link Function^IIdentifier[J

line 65: SynLink Conditional^IStatement[J

line 65: hi link Conditional^IStatement[J

line 66: SynLink Repeat^I^IStatement[J

line 66: hi link Repeat^I^IStatement[J

line 67: SynLink Label^I^IStatement[J

line 67: hi link Label^I^IStatement[J

line 68: SynLink Operator^IStatement[J

line 68: hi link Operator^IStatement[J

line 69: SynLink Keyword^I^IStatement[J

line 69: hi link Keyword^I^IStatement[J

line 70: SynLink Exception^IStatement[J

line 70: hi link Exception^IStatement[J

line 71: SynLink Include^I^IPreProc[J

line 71: hi link Include^I^IPreProc[J

line 72: SynLink Define^I^IPreProc[J

line 72: hi link Define^I^IPreProc[J

line 73: SynLink Macro^I^IPreProc[J

line 73: hi link Macro^I^IPreProc[J

line 74: SynLink PreCondit^IPreProc[J

line 74: hi link PreCondit^IPreProc[J

line 75: SynLink StorageClass^IType[J

line 75: hi link StorageClass^IType[J

line 76: SynLink Structure^IType[J

line 76: hi link Structure^IType[J

line 77: SynLink Typedef^I^IType[J

line 77: hi link Typedef^I^IType[J

line 78: SynLink Tag^I^ISpecial[J

line 78: hi link Tag^I^ISpecial[J

line 79: SynLink SpecialChar^ISpecial[J

line 79: hi link SpecialChar^ISpecial[J

line 80: SynLink Delimiter^ISpecial[J

line 80: hi link Delimiter^ISpecial[J

line 81: SynLink SpecialComment^ISpecial[J

line 81: hi link SpecialComment^ISpecial[J

line 82: SynLink Debug^I^ISpecial[J

line 82: hi link Debug^I^ISpecial[J

line 83: [J

line 84: delcommand SynColor[J

line 85: delcommand SynLink[J

finished sourcing /usr/share/vim/vim71/syntax/syncolor.vim[J
continuing in /usr/share/vim/vim71/syntax/synload.vim[J
Searching for "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/after/syntax/syncolor.vim"[J
Searching for "/home/jsuggs/.vim/after/syntax/syncolor.vim"[J
line 22: endif[J

line 23: [J

line 24: " Line continuation is used here, remove 'C' from 'cpoptions'[J

line 25: let s:cpo_save = &cpo[J

line 26: set cpo&vim[J

line 27: [J

line 28: " First remove all old syntax autocommands.[J

line 29: au! Syntax[J

line 30: [J

line 31: au Syntax *^I^Icall s:SynSet()[J

line 32: [J

line 33: fun! s:SynSet()[J

line 59: [J

line 60: [J

line 61: " Handle adding doxygen to other languages (C, C++, IDL)[J

line 66: au Syntax cpp,c,idl if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif[J

line 67: [J

line 68: [J

line 69: " Source the user-specified syntax highlighting file[J

line 70: if exists("mysyntaxfile") && filereadable(expand(mysyntaxfile))[J

line 71:   execute "source " . mysyntaxfile[J

line 72: endif[J

line 73: [J

line 74: " Restore 'cpoptions'[J

line 75: let &cpo = s:cpo_save[J

line 76: unlet s:cpo_save[J

finished sourcing /usr/share/vim/vim71/syntax/synload.vim[J
continuing in /usr/share/vim/vim71/syntax/syntax.vim[J
line 20: [J

line 21: " Load the FileType autocommands if not done yet.[J

line 22: if exists("did_load_filetypes")[J

line 23:   let s:did_ft = 1[J

line 24: else[J

line 25:   filetype on[J

Searching for "filetype.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/filetype.vim"[J
Searching for "/var/lib/vim/addons/filetype.vim"[J
Searching for "/usr/share/vim/vimfiles/filetype.vim"[J
Searching for "/usr/share/vim/vim71/filetype.vim"[J
line 25: sourcing "/usr/share/vim/vim71/filetype.vim"[J
line 1: " Vim support file to detect file types[J

line 2: "[J

line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 4: " Last Change:^I2007 May 15[J

line 5: [J

line 6: " Listen very carefully, I will say this only once[J

line 7: if exists("did_load_filetypes")[J

line 8:   finish[J

line 9: endif[J

line 10: let did_load_filetypes = 1[J

line 11: [J

line 12: " Line continuation is used here, remove 'C' from 'cpoptions'[J

line 13: let s:cpo_save = &cpo[J

line 14: set cpo&vim[J

line 15: [J

line 16: augroup filetypedetect[J

line 17: [J

line 18: " Ignored extensions[J

line 19: if exists("*fnameescape")[J

line 21: au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-{dist,old},?\+.rpmsave,?\+.rpmnew exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))[J

line 28: au BufNewFile,BufRead *~ let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short[J

line 32: au BufNewFile,BufRead ?\+.in if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif[J

line 33: elseif &verbose > 0[J

line 34:   echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"[J

line 35: endif[J

line 36: [J

line 37: " Pattern used to match file names which should not be inspected.[J

line 38: " Currently finds compressed files.[J

line 39: if !exists("g:ft_ignore_pat")[J

line 40:   let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'[J

line 41: endif[J

line 42: [J

line 43: " Function used for patterns that end in a star: don't set the filetype if the[J

line 44: " file name matches ft_ignore_pat.[J

line 45: func! s:StarSetf(ft)[J

line 50: [J

line 51: " Abaqus or Trasys[J

line 52: au BufNewFile,BufRead *.inp^I^I^Icall s:Check_inp()[J

line 53: [J

line 54: func! s:Check_inp()[J

line 73: [J

line 74: " A-A-P recipe[J

line 75: au BufNewFile,BufRead *.aap^I^I^Isetf aap[J

line 76: [J

line 77: " A2ps printing utility[J

line 78: au BufNewFile,BufRead etc/a2ps.cfg,etc/a2ps/*.cfg,a2psrc,.a2psrc setf a2ps[J

line 79: [J

line 80: " ABAB/4[J

line 81: au BufNewFile,BufRead *.abap^I^I^Isetf abap[J

line 82: [J

line 83: " ABC music notation[J

line 84: au BufNewFile,BufRead *.abc^I^I^Isetf abc[J

line 85: [J

line 86: " ABEL[J

line 87: au BufNewFile,BufRead *.abl^I^I^Isetf abel[J

line 88: [J

line 89: " AceDB[J

line 90: au BufNewFile,BufRead *.wrm^I^I^Isetf acedb[J

line 91: [J

line 92: " Ada (83, 9X, 95)[J

line 93: au BufNewFile,BufRead *.adb,*.ads,*.ada^I^Isetf ada[J

line 94: if has("vms")[J

line 95:   au BufNewFile,BufRead *.gpr,*.ada_m,*.adc ^Isetf ada[J

line 96: else[J

line 97:   au BufNewFile,BufRead *.gpr ^I^I^Isetf ada[J

line 98: endif[J

line 99: [J

line 100: " AHDL[J

line 101: au BufNewFile,BufRead *.tdf^I^I^Isetf ahdl[J

line 102: [J

line 103: " AMPL[J

line 104: au BufNewFile,BufRead *.run^I^I^Isetf ampl[J

line 105: [J

line 106: " Ant[J

line 107: au BufNewFile,BufRead build.xml^I^I^Isetf ant[J

line 108: [J

line 109: " Apache style config file[J

line 110: au BufNewFile,BufRead proftpd.conf*^I^Icall s:StarSetf('apachestyle')[J

line 111: [J

line 112: " Apache config file[J

line 113: au BufNewFile,BufRead .htaccess^I^I^I setf apache[J

line 114: au BufNewFile,BufRead httpd.conf*,srm.conf*,access.conf*,apache.conf*,apache2.conf*,/etc/apache2/*.conf*,/etc/apache2/conf.*/*,/etc/apache2/sites-*/*,/etc/apache2/mods-*/* call s:StarSetf('apache')[J

line 115: [J

line 116: " XA65 MOS6510 cross assembler[J

line 117: au BufNewFile,BufRead *.a65^I^I^Isetf a65[J

line 118: [J

line 119: " Applix ELF[J

line 121: au BufNewFile,BufRead *.am if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif[J

line 122: [J

line 123: " ALSA configuration[J

line 124: au BufNewFile,BufRead ~/.asoundrc,/usr/share/alsa/alsa.conf,/etc/asound.conf^Isetf alsaconf[J

line 125: [J

line 126: " Arc Macro Language[J

line 127: au BufNewFile,BufRead *.aml^I^I^Isetf aml[J

line 128: [J

line 129: " Arch Inventory file[J

line 130: au BufNewFile,BufRead .arch-inventory,=tagging-method^Isetf arch[J

line 131: [J

line 132: " ART*Enterprise (formerly ART-IM)[J

line 133: au BufNewFile,BufRead *.art^I^I^Isetf art[J

line 134: [J

line 135: " ASN.1[J

line 136: au BufNewFile,BufRead *.asn,*.asn1^I^Isetf asn[J

line 137: [J

line 138: " Active Server Pages (with Visual Basic Script)[J

line 144: au BufNewFile,BufRead *.asa if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif[J

line 145: [J

line 146: " Active Server Pages (with Perl or Visual Basic Script)[J

line 154: au BufNewFile,BufRead *.asp if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif[J

line 155: [J

line 156: " Grub (must be before catch *.lst)[J

line 157: au BufNewFile,BufRead /boot/grub/menu.lst,/boot/grub/grub.conf,/etc/grub.conf^Isetf grub[J

line 158: [J

line 159: " Assembly (all kinds)[J

line 160: " *.lst is not pure assembly, it has two extra columns (address, byte codes)[J

line 161: au BufNewFile,BufRead *.asm,*.[sS],*.[aA],*.mac,*.lst^Icall s:FTasm()[J

line 162: [J

line 163: " This function checks for the kind of assembly that is wanted by the user, or[J

line 164: " can be detected from the first five lines of the file.[J

line 165: func! s:FTasm()[J

line 186: [J

line 187: func! s:FTasmsyntax()[J

line 199: [J

line 200: " Macro (VAX)[J

line 201: au BufNewFile,BufRead *.mar^I^I^Isetf vmasm[J

line 202: [J

line 203: " Atlas[J

line 204: au BufNewFile,BufRead *.atl,*.as^I^Isetf atlas[J

line 205: [J

line 206: " Autoit v3[J

line 207: au BufNewFile,BufRead *.au3^I^I^Isetf autoit[J

line 208: [J

line 209: " Autohotkey[J

line 210: au BufNewFile,BufRead *.ahk^I^I^Isetf autohotkey[J

line 211: [J

line 212: " Automake[J

line 213: au BufNewFile,BufRead [mM]akefile.am,GNUmakefile.am^Isetf automake[J

line 214: [J

line 215: " Autotest .at files are actually m4[J

line 216: au BufNewFile,BufRead *.at^I^I^Isetf m4[J

line 217: [J

line 218: " Avenue[J

line 219: au BufNewFile,BufRead *.ave^I^I^Isetf ave[J

line 220: [J

line 221: " Awk[J

line 222: au BufNewFile,BufRead *.awk^I^I^Isetf awk[J

line 223: [J

line 224: " B[J

line 225: au BufNewFile,BufRead *.mch,*.ref,*.imp^I^Isetf b[J

line 226: [J

line 227: " BASIC or Visual Basic[J

line 228: au BufNewFile,BufRead *.bas^I^I^Icall s:FTVB("basic")[J

line 229: [J

line 230: " Check if one of the first five lines contains "VB_Name".  In that case it is[J

line 231: " probably a Visual Basic file.  Otherwise it's assumed to be "alt" filetype.[J

line 232: func! s:FTVB(alt)[J

line 239: [J

line 240: " Visual Basic Script (close to Visual Basic)[J

line 241: au BufNewFile,BufRead *.vbs,*.dsm,*.ctl^I^Isetf vb[J

line 242: [J

line 243: " IBasic file (similar to QBasic)[J

line 244: au BufNewFile,BufRead *.iba,*.ibi^I^Isetf ibasic[J

line 245: [J

line 246: " FreeBasic file (similar to QBasic)[J

line 247: au BufNewFile,BufRead *.fb,*.bi^I^I^Isetf freebasic[J

line 248: [J

line 249: " Batch file for MSDOS.[J

line 250: au BufNewFile,BufRead *.bat,*.sys^I^Isetf dosbatch[J

line 251: " *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.[J

line 253: au BufNewFile,BufRead *.cmd if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif[J

line 254: [J

line 255: " Batch file for 4DOS[J

line 256: au BufNewFile,BufRead *.btm^I^I^Icall s:FTbtm()[J

line 257: func! s:FTbtm()[J

line 264: [J

line 265: " BC calculator[J

line 266: au BufNewFile,BufRead *.bc^I^I^Isetf bc[J

line 267: [J

line 268: " BDF font[J

line 269: au BufNewFile,BufRead *.bdf^I^I^Isetf bdf[J

line 270: [J

line 271: " BibTeX bibliography database file[J

line 272: au BufNewFile,BufRead *.bib^I^I^Isetf bib[J

line 273: [J

line 274: " BibTeX Bibliography Style[J

line 275: au BufNewFile,BufRead *.bst^I^I^Isetf bst[J

line 276: [J

line 277: " BIND configuration[J

line 278: au BufNewFile,BufRead named.conf,rndc.conf^Isetf named[J

line 279: [J

line 280: " BIND zone[J

line 281: au BufNewFile,BufRead named.root^I^Isetf bindzone[J

line 282: au BufNewFile,BufRead *.db^I^I^Icall s:BindzoneCheck('')[J

line 283: [J

line 284: func! s:BindzoneCheck(default)[J

line 291: [J

line 292: " Blank[J

line 293: au BufNewFile,BufRead *.bl^I^I^Isetf blank[J

line 294: [J

line 295: " C or lpc[J

line 296: au BufNewFile,BufRead *.c^I^I^Icall s:FTlpc()[J

line 297: [J

line 298: func! s:FTlpc()[J

line 311: [J

line 312: " Calendar[J

line 313: au BufNewFile,BufRead calendar^I^I^Isetf calendar[J

line 316: au BufNewFile,BufRead */.calendar/*,*/share/calendar/*/calendar.*,*/share/calendar/calendar.*^I^I^I^I^Icall s:StarSetf('calendar')[J

line 317: [J

line 318: " C#[J

line 319: au BufNewFile,BufRead *.cs^I^I^Isetf cs[J

line 320: [J

line 321: " Cdrdao TOC[J

line 322: au BufNewFile,BufRead *.toc^I^I^Isetf cdrtoc[J

line 323: [J

line 324: " Cfengine[J

line 325: au BufNewFile,BufRead cfengine.conf^I^Isetf cfengine[J

line 326: [J

line 327: " Comshare Dimension Definition Language[J

line 328: au BufNewFile,BufRead *.cdl^I^I^Isetf cdl[J

line 329: [J

line 330: " Conary Recipe[J

line 331: au BufNewFile,BufRead *.recipe^I^I^Isetf conaryrecipe[J

line 332: [J

line 333: " Controllable Regex Mutilator[J

line 334: au BufNewFile,BufRead *.crm^I^I^Isetf crm[J

line 335: [J

line 336: " Cyn++[J

line 337: au BufNewFile,BufRead *.cyn^I^I^Isetf cynpp[J

line 338: [J

line 339: " Cynlib[J

line 340: " .cc and .cpp files can be C++ or Cynlib.[J

line 342: au BufNewFile,BufRead *.cc if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif[J

line 344: au BufNewFile,BufRead *.cpp if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif[J

line 345: [J

line 346: " C++[J

line 347: if has("fname_case")[J

line 348:   au BufNewFile,BufRead *.cxx,*.c++,*.C,*.H,*.hh,*.hxx,*.hpp,*.moc,*.tcc,*.inl setf cpp[J

line 349: else[J

line 350:   au BufNewFile,BufRead *.cxx,*.c++,*.hh,*.hxx,*.hpp,*.moc,*.tcc,*.inl setf cpp[J

line 351: endif[J

line 352: [J

line 353: " .h files can be C, Ch or C++, set c_syntax_for_h if you want C,[J

line 354: " ch_syntax_for_h if you want Ch.[J

line 358: au BufNewFile,BufRead *.h if exists("c_syntax_for_h") | setf c | elseif exists("ch_syntax_for_h") | setf ch | else | setf cpp | endif[J

line 359: [J

line 360: " Ch (CHscript)[J

line 361: au BufNewFile,BufRead *.chf^I^I^Isetf ch[J

line 362: [J

line 363: " TLH files are C++ headers generated by Visual C++'s #import from typelibs[J

line 364: au BufNewFile,BufRead *.tlh^I^I^Isetf cpp[J

line 365: [J

line 366: " Cascading Style Sheets[J

line 367: au BufNewFile,BufRead *.css^I^I^Isetf css[J

line 368: [J

line 369: " Century Term Command Scripts (*.cmd too)[J

line 370: au BufNewFile,BufRead *.con^I^I^Isetf cterm[J

line 371: [J

line 372: " Changelog[J

line 374: au BufNewFile,BufRead changelog.Debian,changelog.dch,NEWS.Debian,NEWS.dch^Isetf debchangelog[J

line 375: [J

line 381: au BufNewFile,BufRead [cC]hange[lL]og  if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif[J

line 382: [J

line 386: au BufNewFile,BufRead NEWS  if getline(1) =~ '; urgency='|   setf debchangelog| endif[J

line 387: [J

line 388: " CHILL[J

line 389: au BufNewFile,BufRead *..ch^I^I^Isetf chill[J

line 390: [J

line 391: " Changes for WEB and CWEB or CHILL[J

line 392: au BufNewFile,BufRead *.ch^I^I^Icall s:FTchange()[J

line 393: [J

line 394: " This function checks if one of the first ten lines start with a '@'.  In[J

line 395: " that case it is probably a change file.[J

line 396: " If the first line starts with # or ! it's probably a ch file.[J

line 397: " If a line has "main", "include", "//" ir "/*" it's probably ch.[J

line 398: " Otherwise CHILL is assumed.[J

line 399: func! s:FTchange()[J

line 422: [J

line 423: " ChordPro[J

line 424: au BufNewFile,BufRead *.chopro,*.crd,*.cho,*.crdpro,*.chordpro^Isetf chordpro[J

line 425: [J

line 426: " Clean[J

line 427: au BufNewFile,BufRead *.dcl,*.icl^I^Isetf clean[J

line 428: [J

line 429: " Clever[J

line 430: au BufNewFile,BufRead *.eni^I^I^Isetf cl[J

line 431: [J

line 432: " Clever or dtd[J

line 433: au BufNewFile,BufRead *.ent^I^I^Icall s:FTent()[J

line 434: [J

line 435: func! s:FTent()[J

line 454: [J

line 455: " Clipper (or FoxPro; could also be eviews)[J

line 461: au BufNewFile,BufRead *.prg if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif[J

line 462: [J

line 463: " Cmake[J

line 464: au BufNewFile,BufRead CMakeLists.txt,*.cmake,*.cmake.in^I^Isetf cmake[J

line 465: [J

line 466: " Cmusrc[J

line 467: au BufNewFile,BufRead ~/.cmus/{autosave,rc,command-history,*.theme} setf cmusrc[J

line 468: au BufNewFile,BufRead */cmus/{rc,*.theme}^I^I^Isetf cmusrc[J

line 469: [J

line 470: " Cobol[J

line 471: au BufNewFile,BufRead *.cbl,*.cob,*.lib^Isetf cobol[J

line 472: "   cobol or zope form controller python script? (heuristic)[J

line 478: au BufNewFile,BufRead *.cpy if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif[J

line 479: [J

line 480: " Cold Fusion[J

line 481: au BufNewFile,BufRead *.cfm,*.cfi,*.cfc^I^Isetf cf[J

line 482: [J

line 483: " Configure scripts[J

line 484: au BufNewFile,BufRead configure.in,configure.ac setf config[J

line 485: [J

line 486: " WildPackets EtherPeek Decoder[J

line 487: au BufNewFile,BufRead *.dcd^I^I^Isetf dcd[J

line 488: [J

line 489: " Enlightenment configuration files[J

line 490: au BufNewFile,BufRead *enlightenment/*.cfg^Isetf c[J

line 491: [J

line 492: " Eterm[J

line 493: au BufNewFile,BufRead *Eterm/*.cfg^I^Isetf eterm[J

line 494: [J

line 495: " Lynx config files[J

line 496: au BufNewFile,BufRead lynx.cfg^I^I^Isetf lynx[J

line 497: [J

line 498: " Quake[J

line 499: au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg^Isetf quake[J

line 500: au BufNewFile,BufRead *quake[1-3]/*.cfg^I^I^Isetf quake[J

line 501: [J

line 502: " Quake C[J

line 503: au BufNewFile,BufRead *.qc^I^I^Isetf c[J

line 504: [J

line 505: " Configure files[J

line 506: au BufNewFile,BufRead *.cfg^I^I^Isetf cfg[J

line 507: [J

line 508: " Communicating Sequential Processes[J

line 509: au BufNewFile,BufRead *.csp,*.fdr^I^Isetf csp[J

line 510: [J

line 511: " CUPL logic description and simulation[J

line 512: au BufNewFile,BufRead *.pld^I^I^Isetf cupl[J

line 513: au BufNewFile,BufRead *.si^I^I^Isetf cuplsim[J

line 514: [J

line 515: " Debian Control[J

line 516: au BufNewFile,BufRead */debian/control^I^Isetf debcontrol[J

line 517: [J

line 521: au BufNewFile,BufRead control  if getline(1) =~ '^Source:'|   setf debcontrol| endif[J

line 522: [J

line 523: " Debian Sources.list[J

line 524: au BufNewFile,BufRead /etc/apt/sources.list^Isetf debsources[J

line 525: [J

line 526: " ROCKLinux package description[J

line 527: au BufNewFile,BufRead *.desc^I^I^Isetf desc[J

line 528: [J

line 529: " the D language[J

line 530: au BufNewFile,BufRead *.d^I^I^Isetf d[J

line 531: [J

line 532: " Desktop files[J

line 533: au BufNewFile,BufRead *.desktop,.directory^Isetf desktop[J

line 534: [J

line 535: " Dict config[J

line 536: au BufNewFile,BufRead dict.conf,.dictrc^I^Isetf dictconf[J

line 537: [J

line 538: " Dictd config[J

line 539: au BufNewFile,BufRead dictd.conf^I^Isetf dictdconf[J

line 540: [J

line 541: " Diff files[J

line 542: au BufNewFile,BufRead *.diff,*.rej,*.patch^Isetf diff[J

line 543: [J

line 544: " Dircolors[J

line 545: au BufNewFile,BufRead .dir_colors,/etc/DIR_COLORS^Isetf dircolors[J

line 546: [J

line 547: " Diva (with Skill) or InstallShield[J

line 553: au BufNewFile,BufRead *.rul if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif[J

line 554: [J

line 555: " DCL (Digital Command Language - vms) or DNS zone file[J

line 556: au BufNewFile,BufRead *.com^I^I^Icall s:BindzoneCheck('dcl')[J

line 557: [J

line 558: " DOT[J

line 559: au BufNewFile,BufRead *.dot^I^I^Isetf dot[J

line 560: [J

line 561: " Dylan - lid files[J

line 562: au BufNewFile,BufRead *.lid^I^I^Isetf dylanlid[J

line 563: [J

line 564: " Dylan - intr files (melange)[J

line 565: au BufNewFile,BufRead *.intr^I^I^Isetf dylanintr[J

line 566: [J

line 567: " Dylan[J

line 568: au BufNewFile,BufRead *.dylan^I^I^Isetf dylan[J

line 569: [J

line 570: " Microsoft Module Definition[J

line 571: au BufNewFile,BufRead *.def^I^I^Isetf def[J

line 572: [J

line 573: " Dracula[J

line 574: au BufNewFile,BufRead *.drac,*.drc,*lvs,*lpe^Isetf dracula[J

line 575: [J

line 576: " dsl[J

line 577: au BufNewFile,BufRead *.dsl^I^I^Isetf dsl[J

line 578: [J

line 579: " DTD (Document Type Definition for XML)[J

line 580: au BufNewFile,BufRead *.dtd^I^I^Isetf dtd[J

line 581: [J

line 582: " EDIF (*.edf,*.edif,*.edn,*.edo)[J

line 583: au BufNewFile,BufRead *.ed\(f\|if\|n\|o\)^Isetf edif[J

line 584: [J

line 585: " Embedix Component Description[J

line 586: au BufNewFile,BufRead *.ecd^I^I^Isetf ecd[J

line 587: [J

line 588: " Eiffel or Specman[J

line 589: au BufNewFile,BufRead *.e,*.E^I^I^Icall s:FTe()[J

line 590: [J

line 591: " Elinks configuration[J

line 592: au BufNewFile,BufRead */etc/elinks.conf,*/.elinks/elinks.conf^Isetf elinks[J

line 593: [J

line 594: func! s:FTe()[J

line 605: [J

line 606: " ERicsson LANGuage[J

line 607: au BufNewFile,BufRead *.erl^I^I^Isetf erlang[J

line 608: [J

line 609: " Elm Filter Rules file[J

line 610: au BufNewFile,BufRead filter-rules^I^Isetf elmfilt[J

line 611: [J

line 612: " ESMTP rc file[J

line 613: au BufNewFile,BufRead *esmtprc^I^I^Isetf esmtprc[J

line 614: [J

line 615: " ESQL-C[J

line 616: au BufNewFile,BufRead *.ec,*.EC^I^I^Isetf esqlc[J

line 617: [J

line 618: " Esterel[J

line 619: au BufNewFile,BufRead *.strl^I^I^Isetf esterel[J

line 620: [J

line 621: " Essbase script[J

line 622: au BufNewFile,BufRead *.csc^I^I^Isetf csc[J

line 623: [J

line 624: " Exim[J

line 625: au BufNewFile,BufRead exim.conf^I^I^Isetf exim[J

line 626: [J

line 627: " Expect[J

line 628: au BufNewFile,BufRead *.exp^I^I^Isetf expect[J

line 629: [J

line 630: " Exports[J

line 631: au BufNewFile,BufRead exports^I^I^Isetf exports[J

line 632: [J

line 633: " Factor[J

line 634: au BufNewFile,BufRead *.factor^I^I^Isetf factor[J

line 635: [J

line 636: " Fetchmail RC file[J

line 637: au BufNewFile,BufRead .fetchmailrc^I^Isetf fetchmail[J

line 638: [J

line 639: " FlexWiki[J

line 640: au BufNewFile,BufRead *.wiki^I^I^Isetf flexwiki[J

line 641: [J

line 642: " Focus Executable[J

line 643: au BufNewFile,BufRead *.fex,*.focexec^I^Isetf focexec[J

line 644: [J

line 645: " Focus Master file (but not for auto.master)[J

line 646: au BufNewFile,BufRead auto.master^I^Isetf conf[J

line 647: au BufNewFile,BufRead *.mas,*.master^I^Isetf master[J

line 648: [J

line 649: " Forth[J

line 650: au BufNewFile,BufRead *.fs,*.ft^I^I^Isetf forth[J

line 651: [J

line 652: " Fortran[J

line 653: if has("fname_case")[J

line 654:   au BufNewFile,BufRead *.F,*.FOR,*.FPP,*.FTN,*.F77,*.F90,*.F95^I setf fortran[J

line 655: endif[J

line 656: au BufNewFile,BufRead   *.f,*.for,*.fpp,*.ftn,*.f77,*.f90,*.f95  setf fortran[J

line 657: [J

line 658: " FStab[J

line 659: au BufNewFile,BufRead fstab,mtab^I^Isetf fstab[J

line 660: [J

line 661: " GDB command files[J

line 662: au BufNewFile,BufRead .gdbinit^I^I^Isetf gdb[J

line 663: [J

line 664: " GDMO[J

line 665: au BufNewFile,BufRead *.mo,*.gdmo^I^Isetf gdmo[J

line 666: [J

line 667: " Gedcom[J

line 668: au BufNewFile,BufRead *.ged^I^I^Isetf gedcom[J

line 669: [J

line 670: " Git[J

line 671: autocmd BufNewFile,BufRead *.git/COMMIT_EDITMSG    setf gitcommit[J

line 672: autocmd BufNewFile,BufRead *.git/config,.gitconfig setf gitconfig[J

line 673: autocmd BufNewFile,BufRead git-rebase-todo         setf gitrebase[J

line 677: autocmd BufNewFile,BufRead .msg.[0-9]* if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif[J

line 681: autocmd BufNewFile,BufRead *.git/** if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif[J

line 682: [J

line 683: " Gkrellmrc[J

line 684: au BufNewFile,BufRead gkrellmrc,gkrellmrc_?^Isetf gkrellmrc[J

line 685: [J

line 686: " GP scripts (2.0 and onward)[J

line 687: au BufNewFile,BufRead *.gp,.gprc^I^Isetf gp[J

line 688: [J

line 689: " GPG[J

line 690: au BufNewFile,BufRead */.gnupg/options^I^Isetf gpg[J

line 691: au BufNewFile,BufRead */.gnupg/gpg.conf^I^Isetf gpg[J

line 692: au BufNewFile,BufRead /usr/**/gnupg/options.skel setf gpg[J

line 693: [J

line 694: " Gnuplot scripts[J

line 695: au BufNewFile,BufRead *.gpi^I^I^Isetf gnuplot[J

line 696: [J

line 697: " GrADS scripts[J

line 698: au BufNewFile,BufRead *.gs^I^I^Isetf grads[J

line 699: [J

line 700: " Gretl[J

line 701: au BufNewFile,BufRead *.gretl^I^I^Isetf gretl[J

line 702: [J

line 703: " Groovy[J

line 704: au BufNewFile,BufRead *.groovy^I^I^Isetf groovy[J

line 705: [J

line 706: " GNU Server Pages[J

line 707: au BufNewFile,BufRead *.gsp^I^I^Isetf gsp[J

line 708: [J

line 709: " Group file[J

line 710: au BufNewFile,BufRead /etc/group{-,.edit,},/etc/gshadow{-,.edit,},/var/backups/{group,gshadow}.bak setf group[J

line 711: [J

line 712: " GTK RC[J

line 713: au BufNewFile,BufRead .gtkrc,gtkrc^I^Isetf gtkrc[J

line 714: [J

line 715: " Hamster Classic | Playground files[J

line 716: au BufNewFile,BufRead *.hsc,*.hsm^I^Isetf hamster[J

line 717: [J

line 718: " Haskell[J

line 719: au BufNewFile,BufRead *.hs^I^I^Isetf haskell[J

line 720: au BufNewFile,BufRead *.lhs^I^I^Isetf lhaskell[J

line 721: au BufNewFile,BufRead *.chs^I^I^Isetf chaskell[J

line 722: [J

line 723: " Hercules[J

line 724: au BufNewFile,BufRead *.vc,*.ev,*.rs,*.sum,*.errsum^Isetf hercules[J

line 725: [J

line 726: " HEX (Intel)[J

line 727: au BufNewFile,BufRead *.hex,*.h32^I^Isetf hex[J

line 728: [J

line 729: " Tilde (must be before HTML)[J

line 730: au BufNewFile,BufRead *.t.html^I^I^Isetf tilde[J

line 731: [J

line 732: " HTML (.shtml and .stm for server side)[J

line 733: au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call s:FThtml()[J

line 734: [J

line 735: " Distinguish between HTML, XHTML and Django[J

line 736: func! s:FThtml()[J

line 751: [J

line 752: " HTML with Ruby - eRuby[J

line 753: au BufNewFile,BufRead *.erb,*.rhtml^I^Isetf eruby[J

line 754: [J

line 755: " HTML with M4[J

line 756: au BufNewFile,BufRead *.html.m4^I^I^Isetf htmlm4[J

line 757: [J

line 758: " HTML Cheetah template[J

line 759: au BufNewFile,BufRead *.tmpl^I^I^Isetf htmlcheetah[J

line 760: [J

line 761: " Hyper Builder[J

line 762: au BufNewFile,BufRead *.hb^I^I^Isetf hb[J

line 763: [J

line 764: " Icon[J

line 765: au BufNewFile,BufRead *.icn^I^I^Isetf icon[J

line 766: [J

line 767: " IDL (Interface Description Language)[J

line 768: au BufNewFile,BufRead *.idl^I^I^Icall s:FTidl()[J

line 769: [J

line 770: " Distinguish between standard IDL and MS-IDL[J

line 771: func! s:FTidl()[J

line 782: [J

line 783: " Microsoft IDL (Interface Description Language)  Also *.idl[J

line 784: " MOF = WMI (Windows Management Instrumentation) Managed Object Format[J

line 785: au BufNewFile,BufRead *.odl,*.mof^I^Isetf msidl[J

line 786: [J

line 787: " Icewm menu[J

line 788: au BufNewFile,BufRead */.icewm/menu^I^Isetf icemenu[J

line 789: [J

line 790: " Indent profile (must come before IDL *.pro!)[J

line 791: au BufNewFile,BufRead .indent.pro^I^Isetf indent[J

line 792: au BufNewFile,BufRead indent.pro^I^Icall s:ProtoCheck('indent')[J

line 793: [J

line 794: " IDL (Interactive Data Language)[J

line 795: au BufNewFile,BufRead *.pro^I^I^Icall s:ProtoCheck('idlang')[J

line 796: [J

line 797: " Distinguish between "default" and Cproto prototype file. */[J

line 798: func! s:ProtoCheck(default)[J

line 808: [J

line 809: [J

line 810: " Indent RC[J

line 811: au BufNewFile,BufRead indentrc^I^I^Isetf indentrc[J

line 812: [J

line 813: " Inform[J

line 814: au BufNewFile,BufRead *.inf,*.INF^I^Isetf inform[J

line 815: [J

line 816: " Initng[J

line 817: au BufNewFile,BufRead /etc/initng/**/*.i,*.ii^Isetf initng[J

line 818: [J

line 819: " Ipfilter[J

line 820: au BufNewFile,BufRead ipf.conf,ipf6.conf,ipf.rules^Isetf ipfilter[J

line 821: [J

line 822: " Informix 4GL (source - canonical, include file, I4GL+M4 preproc.)[J

line 823: au BufNewFile,BufRead *.4gl,*.4gh,*.m4gl^Isetf fgl[J

line 824: [J

line 825: " .INI file for MSDOS[J

line 826: au BufNewFile,BufRead *.ini^I^I^Isetf dosini[J

line 827: [J

line 828: " SysV Inittab[J

line 829: au BufNewFile,BufRead inittab^I^I^Isetf inittab[J

line 830: [J

line 831: " Inno Setup[J

line 832: au BufNewFile,BufRead *.iss^I^I^Isetf iss[J

line 833: [J

line 834: " JAL[J

line 835: au BufNewFile,BufRead *.jal,*.JAL^I^Isetf jal[J

line 836: [J

line 837: " Jam[J

line 838: au BufNewFile,BufRead *.jpl,*.jpr^I^Isetf jam[J

line 839: [J

line 840: " Java[J

line 841: au BufNewFile,BufRead *.java,*.jav^I^Isetf java[J

line 842: [J

line 843: " JavaCC[J

line 844: au BufNewFile,BufRead *.jj,*.jjt^I^Isetf javacc[J

line 845: [J

line 846: " JavaScript, ECMAScript[J

line 847: au BufNewFile,BufRead *.js,*.javascript,*.es^Isetf javascript[J

line 848: [J

line 849: " Java Server Pages[J

line 850: au BufNewFile,BufRead *.jsp^I^I^Isetf jsp[J

line 851: [J

line 852: " Java Properties resource file (note: doesn't catch font.properties.pl)[J

line 853: au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_??^Isetf jproperties[J

line 854: au BufNewFile,BufRead *.properties_??_??_*^Icall s:StarSetf('jproperties')[J

line 855: [J

line 856: " Jess[J

line 857: au BufNewFile,BufRead *.clp^I^I^Isetf jess[J

line 858: [J

line 859: " Jgraph[J

line 860: au BufNewFile,BufRead *.jgr^I^I^Isetf jgraph[J

line 861: [J

line 862: " Kixtart[J

line 863: au BufNewFile,BufRead *.kix^I^I^Isetf kix[J

line 864: [J

line 865: " Kimwitu[++][J

line 866: au BufNewFile,BufRead *.k^I^I^Isetf kwt[J

line 867: [J

line 868: " KDE script[J

line 869: au BufNewFile,BufRead *.ks^I^I^Isetf kscript[J

line 870: [J

line 871: " Kconfig[J

line 872: au BufNewFile,BufRead Kconfig,Kconfig.debug^Isetf kconfig[J

line 873: [J

line 874: " Lace (ISE)[J

line 875: au BufNewFile,BufRead *.ace,*.ACE^I^Isetf lace[J

line 876: [J

line 877: " Latte[J

line 878: au BufNewFile,BufRead *.latte,*.lte^I^Isetf latte[J

line 879: [J

line 880: " Limits[J

line 881: au BufNewFile,BufRead /etc/limits^I^Isetf limits[J

line 882: [J

line 883: " LambdaProlog (*.mod too, see Modsim)[J

line 884: au BufNewFile,BufRead *.sig^I^I^Isetf lprolog[J

line 885: [J

line 886: " LDAP LDIF[J

line 887: au BufNewFile,BufRead *.ldif^I^I^Isetf ldif[J

line 888: [J

line 889: " Ld loader[J

line 890: au BufNewFile,BufRead *.ld^I^I^Isetf ld[J

line 891: [J

line 892: " Lex[J

line 893: au BufNewFile,BufRead *.lex,*.l^I^I^Isetf lex[J

line 894: [J

line 895: " Libao[J

line 896: au BufNewFile,BufRead /etc/libao.conf,*/.libao^Isetf libao[J

line 897: [J

line 898: " Libsensors[J

line 899: au BufNewFile,BufRead /etc/sensors.conf^I^Isetf sensors[J

line 900: [J

line 901: " LFTP[J

line 902: au BufNewFile,BufRead lftp.conf,.lftprc,*lftp/rc^Isetf lftp[J

line 903: [J

line 904: " Lifelines (or Lex for C++!)[J

line 905: au BufNewFile,BufRead *.ll^I^I^Isetf lifelines[J

line 906: [J

line 907: " Lilo: Linux loader[J

line 908: au BufNewFile,BufRead lilo.conf*^I^Icall s:StarSetf('lilo')[J

line 909: [J

line 910: " Lisp (*.el = ELisp, *.cl = Common Lisp, *.jl = librep Lisp)[J

line 911: if has("fname_case")[J

line 912:   au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,*.L,.emacs,.sawfishrc setf lisp[J

line 913: else[J

line 914:   au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,.emacs,.sawfishrc setf lisp[J

line 915: endif[J

line 916: [J

line 917: " SBCL implementation of Common Lisp[J

line 918: au BufNewFile,BufRead sbclrc,.sbclrc^I^Isetf lisp[J

line 919: [J

line 920: " Lite[J

line 921: au BufNewFile,BufRead *.lite,*.lt^I^Isetf lite[J

line 922: [J

line 923: " LiteStep RC files[J

line 924: au BufNewFile,BufRead */LiteStep/*/*.rc^I^Isetf litestep[J

line 925: [J

line 926: " Login access[J

line 927: au BufNewFile,BufRead /etc/login.access^I^Isetf loginaccess[J

line 928: [J

line 929: " Login defs[J

line 930: au BufNewFile,BufRead /etc/login.defs^I^Isetf logindefs[J

line 931: [J

line 932: " Logtalk[J

line 933: au BufNewFile,BufRead *.lgt^I^I^Isetf logtalk[J

line 934: [J

line 935: " LOTOS[J

line 936: au BufNewFile,BufRead *.lot,*.lotos^I^Isetf lotos[J

line 937: [J

line 938: " Lout (also: *.lt)[J

line 939: au BufNewFile,BufRead *.lou,*.lout^I^Isetf lout[J

line 940: [J

line 941: " Lua[J

line 942: au BufNewFile,BufRead *.lua^I^I^Isetf lua[J

line 943: [J

line 944: " Lynx style file (or LotusScript!)[J

line 945: au BufNewFile,BufRead *.lss^I^I^Isetf lss[J

line 946: [J

line 947: " M4[J

line 949: au BufNewFile,BufRead *.m4 if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif[J

line 950: [J

line 951: " MaGic Point[J

line 952: au BufNewFile,BufRead *.mgp^I^I^Isetf mgp[J

line 953: [J

line 954: " Mail (for Elm, trn, mutt, muttng, rn, slrn)[J

line 955: au BufNewFile,BufRead snd.\d\+,.letter,.letter.\d\+,.followup,.article,.article.\d\+,pico.\d\+,mutt{ng,}-*-\w\+,mutt[[:alnum:]._-]\{6\},ae\d\+.txt,/tmp/SLRN[0-9A-Z.]\+,*.eml setf mail[J

line 956: [J

line 957: " Mail aliases[J

line 958: au BufNewFile,BufRead /etc/mail/aliases,/etc/aliases^Isetf mailaliases[J

line 959: [J

line 960: " Mailcap configuration file[J

line 961: au BufNewFile,BufRead .mailcap,mailcap^I^Isetf mailcap[J

line 962: [J

line 963: " Makefile[J

line 964: au BufNewFile,BufRead *[mM]akefile,*.mk,*.mak,*.dsp setf make[J

line 965: [J

line 966: " MakeIndex[J

line 967: au BufNewFile,BufRead *.ist,*.mst^I^Isetf ist[J

line 968: [J

line 969: " Manpage[J

line 970: au BufNewFile,BufRead *.man^I^I^Isetf man[J

line 971: [J

line 972: " Man config[J

line 973: au BufNewFile,BufRead /etc/man.conf,man.config^Isetf manconf[J

line 974: [J

line 975: " Maple V[J

line 976: au BufNewFile,BufRead *.mv,*.mpl,*.mws^I^Isetf maple[J

line 977: [J

line 978: " Map (UMN mapserver config file)[J

line 979: au BufNewFile,BufRead *.map^I^I^Isetf map[J

line 980: [J

line 981: " Mason[J

line 982: au BufNewFile,BufRead *.mason,*.mhtml^I^Isetf mason[J

line 983: [J

line 984: " Matlab or Objective C[J

line 985: au BufNewFile,BufRead *.m^I^I^Icall s:FTm()[J

line 986: [J

line 987: func! s:FTm()[J

line 1011: [J

line 1012: " Maya Extension Language[J

line 1013: au BufNewFile,BufRead *.mel^I^I^Isetf mel[J

line 1014: [J

line 1015: " Messages[J

line 1016: au BufNewFile,BufRead /var/log/messages,/var/log/messages.*[0-9]  setf messages[J

line 1017: [J

line 1018: " Metafont[J

line 1019: au BufNewFile,BufRead *.mf^I^I^Isetf mf[J

line 1020: [J

line 1021: " MetaPost[J

line 1022: au BufNewFile,BufRead *.mp^I^I^Isetf mp[J

line 1023: [J

line 1024: " MGL[J

line 1025: au BufNewFile,BufRead *.mgl^I^I^Isetf mgl[J

line 1026: [J

line 1027: " MMIX or VMS makefile[J

line 1028: au BufNewFile,BufRead *.mms^I^I^Icall s:FTmms()[J

line 1029: [J

line 1030: func! s:FTmms()[J

line 1046: [J

line 1047: [J

line 1048: " Modsim III (or LambdaProlog)[J

line 1054: au BufNewFile,BufRead *.mod if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif[J

line 1055: [J

line 1056: " Modula 2[J

line 1057: au BufNewFile,BufRead *.m2,*.DEF,*.MOD,*.md,*.mi setf modula2[J

line 1058: [J

line 1059: " Modula 3 (.m3, .i3, .mg, .ig)[J

line 1060: au BufNewFile,BufRead *.[mi][3g]^I^Isetf modula3[J

line 1061: [J

line 1062: " Monk[J

line 1063: au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc^Isetf monk[J

line 1064: [J

line 1065: " MOO[J

line 1066: au BufNewFile,BufRead *.moo^I^I^Isetf moo[J

line 1067: [J

line 1068: " Modconf[J

line 1069: au BufNewFile,BufRead /etc/modules.conf,/etc/conf.modules^Isetf modconf[J

line 1073: au BufNewFile,BufRead /etc/modutils/* if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif[J

line 1074: [J

line 1075: " Mplayer config[J

line 1076: au BufNewFile,BufRead mplayer.conf,*/.mplayer/config^Isetf mplayerconf[J

line 1077: [J

line 1078: " Moterola S record[J

line 1079: au BufNewFile,BufRead *.s19,*.s28,*.s37^I^Isetf srec[J

line 1080: [J

line 1081: " Mrxvtrc[J

line 1082: au BufNewFile,BufRead mrxvtrc,.mrxvtrc^I^Isetf mrxvtrc[J

line 1083: [J

line 1084: " Msql[J

line 1085: au BufNewFile,BufRead *.msql^I^I^Isetf msql[J

line 1086: [J

line 1087: " Mysql[J

line 1088: au BufNewFile,BufRead *.mysql^I^I^Isetf mysql[J

line 1089: [J

line 1090: " M$ Resource files[J

line 1091: au BufNewFile,BufRead *.rc^I^I^Isetf rc[J

line 1092: [J

line 1093: " MuPAD source[J

line 1094: au BufRead,BufNewFile *.mu^I^I^Isetf mupad[J

line 1095: [J

line 1096: " Mush[J

line 1097: au BufNewFile,BufRead *.mush^I^I^Isetf mush[J

line 1098: [J

line 1099: " Mutt setup file (also for Muttng)[J

line 1100: au BufNewFile,BufRead Mutt{ng,}rc^I^I^Isetf muttrc[J

line 1101: au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*^Icall s:StarSetf('muttrc')[J

line 1102: [J

line 1103: " Nano[J

line 1104: au BufNewFile,BufRead /etc/nanorc,.nanorc^Isetf nanorc[J

line 1105: [J

line 1106: " Nastran input/DMAP[J

line 1107: "au BufNewFile,BufRead *.dat^I^I^Isetf nastran[J

line 1108: [J

line 1109: " Natural[J

line 1110: au BufNewFile,BufRead *.NS[ACGLMNPS]^I^Isetf natural[J

line 1111: [J

line 1112: " Netrc[J

line 1113: au BufNewFile,BufRead .netrc^I^I^Isetf netrc[J

line 1114: [J

line 1115: " Novell netware batch files[J

line 1116: au BufNewFile,BufRead *.ncf^I^I^Isetf ncf[J

line 1117: [J

line 1118: " Nroff/Troff (*.ms and *.t are checked below)[J

line 1122: au BufNewFile,BufRead *.me if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif[J

line 1123: au BufNewFile,BufRead *.tr,*.nr,*.roff,*.tmac,*.mom^Isetf nroff[J

line 1124: au BufNewFile,BufRead *.[1-9]^I^I^Icall s:FTnroff()[J

line 1125: [J

line 1126: " This function checks if one of the first five lines start with a dot.  In[J

line 1127: " that case it is probably an nroff file: 'filetype' is set and 1 is returned.[J

line 1128: func! s:FTnroff()[J

line 1135: [J

line 1136: " Nroff or Objective C++[J

line 1137: au BufNewFile,BufRead *.mm^I^I^Icall s:FTmm()[J

line 1138: [J

line 1139: func! s:FTmm()[J

line 1151: [J

line 1152: " Not Quite C[J

line 1153: au BufNewFile,BufRead *.nqc^I^I^Isetf nqc[J

line 1154: [J

line 1155: " NSIS[J

line 1156: au BufNewFile,BufRead *.nsi^I^I^Isetf nsis[J

line 1157: [J

line 1158: " OCAML[J

line 1159: au BufNewFile,BufRead *.ml,*.mli,*.mll,*.mly^Isetf ocaml[J

line 1160: [J

line 1161: " Occam[J

line 1162: au BufNewFile,BufRead *.occ^I^I^Isetf occam[J

line 1163: [J

line 1164: " Omnimark[J

line 1165: au BufNewFile,BufRead *.xom,*.xin^I^Isetf omnimark[J

line 1166: [J

line 1167: " OpenROAD[J

line 1168: au BufNewFile,BufRead *.or^I^I^Isetf openroad[J

line 1169: [J

line 1170: " OPL[J

line 1171: au BufNewFile,BufRead *.[Oo][Pp][Ll]^I^Isetf opl[J

line 1172: [J

line 1173: " Oracle config file[J

line 1174: au BufNewFile,BufRead *.ora^I^I^Isetf ora[J

line 1175: [J

line 1176: " Packet filter conf[J

line 1177: au BufNewFile,BufRead pf.conf^I^I^Isetf pf[J

line 1178: [J

line 1179: " Pam conf[J

line 1180: au BufNewFile,BufRead /etc/pam.conf^I^Isetf pamconf[J

line 1181: [J

line 1182: " PApp[J

line 1183: au BufNewFile,BufRead *.papp,*.pxml,*.pxsl^Isetf papp[J

line 1184: [J

line 1185: " Password file[J

line 1186: au BufNewFile,BufRead /etc/passwd{-,.edit,},/etc/shadow{-,.edit,},/var/backups/{passwd,shadow}.bak setf passwd[J

line 1187: [J

line 1188: " Pascal (also *.p)[J

line 1189: au BufNewFile,BufRead *.pas^I^I^Isetf pascal[J

line 1190: [J

line 1191: " Delphi project file[J

line 1192: au BufNewFile,BufRead *.dpr^I^I^Isetf pascal[J

line 1193: [J

line 1194: " Perl[J

line 1195: if has("fname_case")[J

line 1196:   au BufNewFile,BufRead *.pl,*.PL^I^Icall s:FTpl()[J

line 1197: else[J

line 1198:   au BufNewFile,BufRead *.pl^I^I^Icall s:FTpl()[J

line 1199: endif[J

line 1200: au BufNewFile,BufRead *.plx^I^I^Isetf perl[J

line 1201: [J

line 1202: func! s:FTpl()[J

line 1216: [J

line 1217: " Perl, XPM or XPM2[J

line 1225: au BufNewFile,BufRead *.pm if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif[J

line 1226: [J

line 1227: " Perl POD[J

line 1228: au BufNewFile,BufRead *.pod^I^I^Isetf pod[J

line 1229: [J

line 1230: " Php, php3, php4, etc.[J

line 1231: au BufNewFile,BufRead *.php,*.php\d^I^Isetf php[J

line 1232: [J

line 1233: " Phtml[J

line 1234: au BufNewFile,BufRead *.phtml^I^I^Isetf phtml[J

line 1235: [J

line 1236: " Pike[J

line 1237: au BufNewFile,BufRead *.pike,*.lpc,*.ulpc,*.pmod setf pike[J

line 1238: [J

line 1239: " Pinfo config[J

line 1240: au BufNewFile,BufRead */etc/pinforc,*/.pinforc^Isetf pinfo[J

line 1241: [J

line 1242: " Palm Resource compiler[J

line 1243: au BufNewFile,BufRead *.rcp^I^I^Isetf pilrc[J

line 1244: [J

line 1245: " Pine config[J

line 1246: au BufNewFile,BufRead .pinerc,pinerc,.pinercex,pinercex^I^Isetf pine[J

line 1247: [J

line 1248: " PL/M (also: *.inp)[J

line 1249: au BufNewFile,BufRead *.plm,*.p36,*.pac^I^Isetf plm[J

line 1250: [J

line 1251: " PL/SQL[J

line 1252: au BufNewFile,BufRead *.pls,*.plsql^I^Isetf plsql[J

line 1253: [J

line 1254: " PLP[J

line 1255: au BufNewFile,BufRead *.plp^I^I^Isetf plp[J

line 1256: [J

line 1257: " PO and PO template (GNU gettext)[J

line 1258: au BufNewFile,BufRead *.po,*.pot^I^Isetf po[J

line 1259: [J

line 1260: " Postfix main config[J

line 1261: au BufNewFile,BufRead main.cf^I^I^Isetf pfmain[J

line 1262: [J

line 1263: " PostScript (+ font files, encapsulated PostScript, Adobe Illustrator)[J

line 1264: au BufNewFile,BufRead *.ps,*.pfa,*.afm,*.eps,*.epsf,*.epsi,*.ai^I  setf postscr[J

line 1265: [J

line 1266: " PostScript Printer Description[J

line 1267: au BufNewFile,BufRead *.ppd^I^I^Isetf ppd[J

line 1268: [J

line 1269: " Povray[J

line 1270: au BufNewFile,BufRead *.pov^I^I^Isetf pov[J

line 1271: [J

line 1272: " Povray configuration[J

line 1273: au BufNewFile,BufRead .povrayrc^I^I^Isetf povini[J

line 1274: [J

line 1275: " Povray, PHP or assembly[J

line 1276: au BufNewFile,BufRead *.inc^I^I^Icall s:FTinc()[J

line 1277: [J

line 1278: func! s:FTinc()[J

line 1299: [J

line 1300: " Printcap and Termcap[J

line 1302: au BufNewFile,BufRead *printcap let b:ptcap_type = "print" | setf ptcap[J

line 1304: au BufNewFile,BufRead *termcap let b:ptcap_type = "term" | setf ptcap[J

line 1305: [J

line 1306: " PCCTS / ANTRL[J

line 1307: "au BufNewFile,BufRead *.g^I^I^Isetf antrl[J

line 1308: au BufNewFile,BufRead *.g^I^I^Isetf pccts[J

line 1309: [J

line 1310: " PPWizard[J

line 1311: au BufNewFile,BufRead *.it,*.ih^I^I^Isetf ppwiz[J

line 1312: [J

line 1313: " Oracle Pro*C/C++[J

line 1314: au BufNewFile,BufRead *.pc^I^I^Isetf proc[J

line 1315: [J

line 1316: " Privoxy actions file[J

line 1317: au BufNewFile,BufRead *.action^I^I^Isetf privoxy[J

line 1318: [J

line 1319: " Procmail[J

line 1320: au BufNewFile,BufRead .procmail,.procmailrc^Isetf procmail[J

line 1321: [J

line 1322: " Progress or CWEB[J

line 1323: au BufNewFile,BufRead *.w^I^I^Icall s:FTprogress_cweb()[J

line 1324: [J

line 1325: func! s:FTprogress_cweb()[J

line 1336: [J

line 1337: " Progress or assembly[J

line 1338: au BufNewFile,BufRead *.i^I^I^Icall s:FTprogress_asm()[J

line 1339: [J

line 1340: func! s:FTprogress_asm()[J

line 1362: [J

line 1363: " Progress or Pascal[J

line 1364: au BufNewFile,BufRead *.p^I^I^Icall s:FTprogress_pascal()[J

line 1365: [J

line 1366: func! s:FTprogress_pascal()[J

line 1390: [J

line 1391: [J

line 1392: " Software Distributor Product Specification File (POSIX 1387.2-1995)[J

line 1393: au BufNewFile,BufRead *.psf^I^I^Isetf psf[J

line 1397: au BufNewFile,BufRead INDEX,INFO if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif[J

line 1398: [J

line 1399: " Prolog[J

line 1400: au BufNewFile,BufRead *.pdb^I^I^Isetf prolog[J

line 1401: [J

line 1402: " Protocols[J

line 1403: au BufNewFile,BufRead /etc/protocols^I^Isetf protocols[J

line 1404: [J

line 1405: " Pyrex[J

line 1406: au BufNewFile,BufRead *.pyx,*.pxd^I^Isetf pyrex[J

line 1407: [J

line 1408: " Python[J

line 1409: au BufNewFile,BufRead *.py,*.pyw^I^Isetf python[J

line 1410: [J

line 1411: " Radiance[J

line 1412: au BufNewFile,BufRead *.rad,*.mat^I^Isetf radiance[J

line 1413: [J

line 1414: " Ratpoison config/command files[J

line 1415: au BufNewFile,BufRead .ratpoisonrc,ratpoisonrc^Isetf ratpoison[J

line 1416: [J

line 1417: " RCS file[J

line 1418: au BufNewFile,BufRead *\,v^I^I^Isetf rcs[J

line 1419: [J

line 1420: " Readline[J

line 1421: au BufNewFile,BufRead .inputrc,inputrc^I^Isetf readline[J

line 1422: [J

line 1423: " Registry for MS-Windows[J

line 1425: au BufNewFile,BufRead *.reg if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif[J

line 1426: [J

line 1427: " Renderman Interface Bytestream[J

line 1428: au BufNewFile,BufRead *.rib^I^I^Isetf rib[J

line 1429: [J

line 1430: " Rexx[J

line 1431: au BufNewFile,BufRead *.rexx,*.rex^I^Isetf rexx[J

line 1432: [J

line 1433: " R (Splus)[J

line 1434: if has("fname_case")[J

line 1435:   au BufNewFile,BufRead *.s,*.S^I^I^Isetf r[J

line 1436: else[J

line 1437:   au BufNewFile,BufRead *.s^I^I^Isetf r[J

line 1438: endif[J

line 1439: [J

line 1440: " R Help file[J

line 1441: if has("fname_case")[J

line 1442:   au BufNewFile,BufRead *.rd,*.Rd^I^Isetf rhelp[J

line 1443: else[J

line 1444:   au BufNewFile,BufRead *.rd^I^I^Isetf rhelp[J

line 1445: endif[J

line 1446: [J

line 1447: " R noweb file[J

line 1448: if has("fname_case")[J

line 1449:   au BufNewFile,BufRead *.Rnw,*.rnw,*.Snw,*.snw^I^Isetf rnoweb[J

line 1450: else[J

line 1451:   au BufNewFile,BufRead *.rnw,*.snw^I^I^Isetf rnoweb[J

line 1452: endif[J

line 1453: [J

line 1454: " Rexx, Rebol or R[J

line 1455: au BufNewFile,BufRead *.r,*.R^I^I^Icall s:FTr()[J

line 1456: [J

line 1457: func! s:FTr()[J

line 1484: [J

line 1485: " Remind[J

line 1486: au BufNewFile,BufRead .reminders*^I^Icall s:StarSetf('remind')[J

line 1487: [J

line 1488: " Resolv.conf[J

line 1489: au BufNewFile,BufRead resolv.conf^I^Isetf resolv[J

line 1490: [J

line 1491: " Relax NG Compact[J

line 1492: au BufNewFile,BufRead *.rnc^I^I^Isetf rnc[J

line 1493: [J

line 1494: " RPL/2[J

line 1495: au BufNewFile,BufRead *.rpl^I^I^Isetf rpl[J

line 1496: [J

line 1497: " Robots.txt[J

line 1498: au BufNewFile,BufRead robots.txt^I^Isetf robots[J

line 1499: [J

line 1500: " Rpcgen[J

line 1501: au BufNewFile,BufRead *.x^I^I^Isetf rpcgen[J

line 1502: [J

line 1503: " reStructuredText Documentation Format[J

line 1504: au BufNewFile,BufRead *.rst^I^I^Isetf rst[J

line 1505: [J

line 1506: " RTF[J

line 1507: au BufNewFile,BufRead *.rtf^I^I^Isetf rtf[J

line 1508: [J

line 1509: " Ruby[J

line 1510: au BufNewFile,BufRead *.rb,*.rbw,*.gem,*.gemspec^Isetf ruby[J

line 1511: [J

line 1512: " Ruby on Rails[J

line 1513: au BufNewFile,BufRead *.builder,*.rxml,*.rjs^Isetf ruby[J

line 1514: [J

line 1515: " Rantfile and Rakefile is like Ruby[J

line 1516: au BufNewFile,BufRead [rR]antfile,*.rant,[rR]akefile,*.rake^Isetf ruby[J

line 1517: [J

line 1518: " S-lang (or shader language!)[J

line 1519: au BufNewFile,BufRead *.sl^I^I^Isetf slang[J

line 1520: [J

line 1521: " Samba config[J

line 1522: au BufNewFile,BufRead smb.conf^I^I^Isetf samba[J

line 1523: [J

line 1524: " SAS script[J

line 1525: au BufNewFile,BufRead *.sas^I^I^Isetf sas[J

line 1526: [J

line 1527: " Sather[J

line 1528: au BufNewFile,BufRead *.sa^I^I^Isetf sather[J

line 1529: [J

line 1530: " Scilab[J

line 1531: au BufNewFile,BufRead *.sci,*.sce^I^Isetf scilab[J

line 1532: [J

line 1533: " SD: Streaming Descriptors[J

line 1534: au BufNewFile,BufRead *.sd^I^I^Isetf sd[J

line 1535: [J

line 1536: " SDL[J

line 1537: au BufNewFile,BufRead *.sdl,*.pr^I^Isetf sdl[J

line 1538: [J

line 1539: " sed[J

line 1540: au BufNewFile,BufRead *.sed^I^I^Isetf sed[J

line 1541: [J

line 1542: " Sieve (RFC 3028)[J

line 1543: au BufNewFile,BufRead *.siv^I^I^Isetf sieve[J

line 1544: [J

line 1545: " Sendmail[J

line 1546: au BufNewFile,BufRead sendmail.cf^I^Isetf sm[J

line 1547: [J

line 1548: " Sendmail .mc files are actually m4[J

line 1549: au BufNewFile,BufRead *.mc^I^I^Isetf m4[J

line 1550: [J

line 1551: " Services[J

line 1552: au BufNewFile,BufRead /etc/services^I^Isetf services[J

line 1553: [J

line 1554: " Service Location config[J

line 1555: au BufNewFile,BufRead /etc/slp.conf^I^Isetf slpconf[J

line 1556: [J

line 1557: " Service Location registration[J

line 1558: au BufNewFile,BufRead /etc/slp.reg^I^Isetf slpreg[J

line 1559: [J

line 1560: " Service Location SPI[J

line 1561: au BufNewFile,BufRead /etc/slp.spi^I^Isetf slpspi[J

line 1562: [J

line 1563: " Setserial config[J

line 1564: au BufNewFile,BufRead /etc/serial.conf^I^Isetf setserial[J

line 1565: [J

line 1566: " SGML[J

line 1575: au BufNewFile,BufRead *.sgm,*.sgml if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="sgml" |   setf docbk | else |   setf sgml | endif[J

line 1576: [J

line 1577: " SGMLDECL[J

line 1581: au BufNewFile,BufRead *.decl,*.dcl,*.dec if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif[J

line 1582: [J

line 1583: " SGML catalog file[J

line 1584: au BufNewFile,BufRead catalog^I^I^Isetf catalog[J

line 1585: au BufNewFile,BufRead sgml.catalog*^I^Icall s:StarSetf('catalog')[J

line 1586: [J

line 1587: " Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.[J

line 1588: " Gentoo ebuilds are actually bash scripts[J

line 1589: au BufNewFile,BufRead .bashrc*,bashrc,bash.bashrc,.bash_profile*,.bash_logout*,*.bash,*.ebuild call SetFileTypeSH("bash")[J

line 1590: au BufNewFile,BufRead .kshrc*,*.ksh call SetFileTypeSH("ksh")[J

line 1591: au BufNewFile,BufRead /etc/profile,.profile*,*.sh,*.env call SetFileTypeSH(getline(1))[J

line 1592: [J

line 1593: " Also called from scripts.vim.[J

line 1594: func! SetFileTypeSH(name)[J

line 1625: [J

line 1626: " For shell-like file types, check for an "exec" command hidden in a comment,[J

line 1627: " as used for Tcl.[J

line 1628: " Also called from scripts.vim, thus can't be local to this script.[J

line 1629: func! SetFileTypeShell(name)[J

line 1648: [J

line 1649: " tcsh scripts[J

line 1650: au BufNewFile,BufRead .tcshrc*,*.tcsh,tcsh.tcshrc,tcsh.login^Icall SetFileTypeShell("tcsh")[J

line 1651: [J

line 1652: " csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)[J

line 1653: au BufNewFile,BufRead .login*,.cshrc*,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call s:CSH()[J

line 1654: [J

line 1655: func! s:CSH()[J

line 1664: [J

line 1665: " Z-Shell script[J

line 1666: au BufNewFile,BufRead .zprofile,/etc/zprofile,.zfbfmarks  setf zsh[J

line 1667: au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')[J

line 1668: [J

line 1669: " Scheme[J

line 1670: au BufNewFile,BufRead *.scm,*.ss^I^Isetf scheme[J

line 1671: [J

line 1672: " Screen RC[J

line 1673: au BufNewFile,BufRead .screenrc,screenrc^Isetf screen[J

line 1674: [J

line 1675: " Simula[J

line 1676: au BufNewFile,BufRead *.sim^I^I^Isetf simula[J

line 1677: [J

line 1678: " SINDA[J

line 1679: au BufNewFile,BufRead *.sin,*.s85^I^Isetf sinda[J

line 1680: [J

line 1681: " SiSU[J

line 1682: au BufNewFile,BufRead *.sst,*.ssm,*.ssi,*.-sst,*._sst setf sisu[J

line 1683: au BufNewFile,BufRead *.sst.meta,*.-sst.meta,*._sst.meta setf sisu[J

line 1684: [J

line 1685: " SKILL[J

line 1686: au BufNewFile,BufRead *.il,*.ils,*.cdf^I^Isetf skill[J

line 1687: [J

line 1688: " SLRN[J

line 1689: au BufNewFile,BufRead .slrnrc^I^I^Isetf slrnrc[J

line 1690: au BufNewFile,BufRead *.score^I^I^Isetf slrnsc[J

line 1691: [J

line 1692: " Smalltalk (and TeX)[J

line 1693: au BufNewFile,BufRead *.st^I^I^Isetf st[J

line 1699: au BufNewFile,BufRead *.cls if getline(1) =~ '^%' |  setf tex | else |  setf st | endif[J

line 1700: [J

line 1701: " Smarty templates[J

line 1702: au BufNewFile,BufRead *.tpl^I^I^Isetf smarty[J

line 1703: [J

line 1704: " SMIL or XML[J

line 1710: au BufNewFile,BufRead *.smil if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif[J

line 1711: [J

line 1712: " SMIL or SNMP MIB file[J

line 1718: au BufNewFile,BufRead *.smi if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif[J

line 1719: [J

line 1720: " SMITH[J

line 1721: au BufNewFile,BufRead *.smt,*.smith^I^Isetf smith[J

line 1722: [J

line 1723: " Snobol4 and spitbol[J

line 1724: au BufNewFile,BufRead *.sno,*.spt^I^Isetf snobol4[J

line 1725: [J

line 1726: " SNMP MIB files[J

line 1727: au BufNewFile,BufRead *.mib,*.my^I^Isetf mib[J

line 1728: [J

line 1729: " Snort Configuration[J

line 1730: au BufNewFile,BufRead *.hog,snort.conf,vision.conf^Isetf hog[J

line 1731: au BufNewFile,BufRead *.rules^I^I^Icall s:FTRules()[J

line 1732: [J

line 1733: let s:ft_rules_udev_rules_pattern = '^\s*\cudev_rules\s*=\s*"\([^"]\{-1,}\)/*".*'[J

line 1734: func! s:FTRules()[J

line 1757: [J

line 1758: [J

line 1759: " Spec (Linux RPM)[J

line 1760: au BufNewFile,BufRead *.spec^I^I^Isetf spec[J

line 1761: [J

line 1762: " Speedup (AspenTech plant simulator)[J

line 1763: au BufNewFile,BufRead *.speedup,*.spdata,*.spd^Isetf spup[J

line 1764: [J

line 1765: " Slice[J

line 1766: au BufNewFile,BufRead *.ice^I^I^Isetf slice[J

line 1767: [J

line 1768: " Spice[J

line 1769: au BufNewFile,BufRead *.sp,*.spice^I^Isetf spice[J

line 1770: [J

line 1771: " Spyce[J

line 1772: au BufNewFile,BufRead *.spy,*.spi^I^Isetf spyce[J

line 1773: [J

line 1774: " Squid[J

line 1775: au BufNewFile,BufRead squid.conf^I^Isetf squid[J

line 1776: [J

line 1777: " SQL for Oracle Designer[J

line 1778: au BufNewFile,BufRead *.tyb,*.typ,*.tyc,*.pkb,*.pks^Isetf sql[J

line 1779: [J

line 1780: " SQL[J

line 1781: au BufNewFile,BufRead *.sql^I^I^Icall s:SQL()[J

line 1782: [J

line 1783: func! s:SQL()[J

line 1790: [J

line 1791: " SQLJ[J

line 1792: au BufNewFile,BufRead *.sqlj^I^I^Isetf sqlj[J

line 1793: [J

line 1794: " SQR[J

line 1795: au BufNewFile,BufRead *.sqr,*.sqi^I^Isetf sqr[J

line 1796: [J

line 1797: " OpenSSH configuration[J

line 1798: au BufNewFile,BufRead ssh_config,*/.ssh/config^Isetf sshconfig[J

line 1799: [J

line 1800: " OpenSSH server configuration[J

line 1801: au BufNewFile,BufRead sshd_config^I^Isetf sshdconfig[J

line 1802: [J

line 1803: " Stata[J

line 1804: au BufNewFile,BufRead *.ado,*.class,*.do,*.imata,*.mata   setf stata[J

line 1805: [J

line 1806: " SMCL[J

line 1807: au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl^Isetf smcl[J

line 1808: [J

line 1809: " Stored Procedures[J

line 1810: au BufNewFile,BufRead *.stp^I^I^Isetf stp[J

line 1811: [J

line 1812: " Standard ML[J

line 1813: au BufNewFile,BufRead *.sml^I^I^Isetf sml[J

line 1814: [J

line 1815: " Sysctl[J

line 1816: au BufNewFile,BufRead /etc/sysctl.conf^I^Isetf sysctl[J

line 1817: [J

line 1818: " Sudoers[J

line 1819: au BufNewFile,BufRead /etc/sudoers,sudoers.tmp^Isetf sudoers[J

line 1820: [J

line 1821: " If the file has an extension of 't' and is in a directory 't' then it is[J

line 1822: " almost certainly a Perl test file.[J

line 1823: " If the first line starts with '#' and contains 'perl' it's probably a Perl[J

line 1824: " file.[J

line 1825: " (Slow test) If a file contains a 'use' statement then it is almost certainly[J

line 1826: " a Perl file.[J

line 1827: func! s:FTperl()[J

line 1842: [J

line 1843: " Tads (or Nroff or Perl test file)[J

line 1845: au BufNewFile,BufRead *.t if !s:FTnroff() && !s:FTperl() | setf tads | endif[J

line 1846: [J

line 1847: " Tags[J

line 1848: au BufNewFile,BufRead tags^I^I^Isetf tags[J

line 1849: [J

line 1850: " TAK[J

line 1851: au BufNewFile,BufRead *.tak^I^I^Isetf tak[J

line 1852: [J

line 1853: " Tcl (JACL too)[J

line 1854: au BufNewFile,BufRead *.tcl,*.tk,*.itcl,*.itk,*.jacl^Isetf tcl[J

line 1855: [J

line 1856: " TealInfo[J

line 1857: au BufNewFile,BufRead *.tli^I^I^Isetf tli[J

line 1858: [J

line 1859: " Telix Salt[J

line 1860: au BufNewFile,BufRead *.slt^I^I^Isetf tsalt[J

line 1861: [J

line 1862: " Terminfo[J

line 1863: au BufNewFile,BufRead *.ti^I^I^Isetf terminfo[J

line 1864: [J

line 1865: " TeX[J

line 1866: au BufNewFile,BufRead *.latex,*.sty,*.dtx,*.ltx,*.bbl^Isetf tex[J

line 1867: au BufNewFile,BufRead *.tex^I^I^Icall s:FTtex()[J

line 1868: [J

line 1869: " Choose context, plaintex, or tex (LaTeX) based on these rules:[J

line 1870: " 1. Check the first line of the file for "%&<format>".[J

line 1871: " 2. Check the first 1000 non-comment lines for LaTeX or ConTeXt keywords.[J

line 1872: " 3. Default to "latex" or to g:tex_flavor, can be set in user's vimrc.[J

line 1873: func! s:FTtex()[J

line 1920: [J

line 1921: " Context[J

line 1922: au BufNewFile,BufRead tex/context/*/*.tex^Isetf context[J

line 1923: [J

line 1924: " Texinfo[J

line 1925: au BufNewFile,BufRead *.texinfo,*.texi,*.txi^Isetf texinfo[J

line 1926: [J

line 1927: " TeX configuration[J

line 1928: au BufNewFile,BufRead texmf.cnf^I^I^Isetf texmf[J

line 1929: [J

line 1930: " Tidy config[J

line 1931: au BufNewFile,BufRead .tidyrc,tidyrc^I^Isetf tidy[J

line 1932: [J

line 1933: " TF mud client[J

line 1934: au BufNewFile,BufRead *.tf,.tfrc,tfrc^I^Isetf tf[J

line 1935: [J

line 1936: " TPP - Text Presentation Program[J

line 1937: au BufNewFile,BufReadPost *.tpp^I^I^Isetf tpp[J

line 1938: [J

line 1939: " Trustees[J

line 1940: au BufNewFile,BufRead trustees.conf^I^Isetf trustees[J

line 1941: [J

line 1942: " TSS - Geometry[J

line 1943: au BufNewFile,BufReadPost *.tssgm^I^Isetf tssgm[J

line 1944: [J

line 1945: " TSS - Optics[J

line 1946: au BufNewFile,BufReadPost *.tssop^I^Isetf tssop[J

line 1947: [J

line 1948: " TSS - Command Line (temporary)[J

line 1949: au BufNewFile,BufReadPost *.tsscl^I^Isetf tsscl[J

line 1950: [J

line 1951: " Motif UIT/UIL files[J

line 1952: au BufNewFile,BufRead *.uit,*.uil^I^Isetf uil[J

line 1953: [J

line 1954: " Udev conf[J

line 1955: au BufNewFile,BufRead /etc/udev/udev.conf^Isetf udevconf[J

line 1956: [J

line 1957: " Udev rules[J

line 1958: au BufNewFile,BufRead /etc/udev/rules.d/*.rules setf udevrules[J

line 1959: [J

line 1960: " Udev permissions[J

line 1961: au BufNewFile,BufRead /etc/udev/permissions.d/*.permissions setf udevperm[J

line 1962: "[J

line 1963: " Udev symlinks config[J

line 1964: au BufNewFile,BufRead /etc/udev/cdsymlinks.conf^Isetf sh[J

line 1965: [J

line 1966: " UnrealScript[J

line 1967: au BufNewFile,BufRead *.uc^I^I^Isetf uc[J

line 1968: [J

line 1969: " Updatedb[J

line 1970: au BufNewFile,BufRead /etc/updatedb.conf^Isetf updatedb[J

line 1971: [J

line 1972: " Vera[J

line 1973: au BufNewFile,BufRead *.vr,*.vri,*.vrh^I^Isetf vera[J

line 1974: [J

line 1975: " Verilog HDL[J

line 1976: au BufNewFile,BufRead *.v^I^I^Isetf verilog[J

line 1977: [J

line 1978: " Verilog-AMS HDL[J

line 1979: au BufNewFile,BufRead *.va,*.vams^I^Isetf verilogams[J

line 1980: [J

line 1981: " VHDL[J

line 1982: au BufNewFile,BufRead *.hdl,*.vhd,*.vhdl,*.vbe,*.vst  setf vhdl[J

line 1983: au BufNewFile,BufRead *.vhdl_[0-9]*^I^Icall s:StarSetf('vhdl')[J

line 1984: [J

line 1985: " Vim script[J

line 1986: au BufNewFile,BufRead *.vim,*.vba,.exrc,_exrc^Isetf vim[J

line 1987: [J

line 1988: " Viminfo file[J

line 1989: au BufNewFile,BufRead .viminfo,_viminfo^I^Isetf viminfo[J

line 1990: [J

line 1991: " Virata Config Script File[J

line 1992: au BufRead,BufNewFile *.hw,*.module,*.pkg^Isetf virata[J

line 1993: [J

line 1994: " Visual Basic (also uses *.bas) or FORM[J

line 1995: au BufNewFile,BufRead *.frm^I^I^Icall s:FTVB("form")[J

line 1996: [J

line 1997: " SaxBasic is close to Visual Basic[J

line 1998: au BufNewFile,BufRead *.sba^I^I^Isetf vb[J

line 1999: [J

line 2000: " Vgrindefs file[J

line 2001: au BufNewFile,BufRead vgrindefs^I^I^Isetf vgrindefs[J

line 2002: [J

line 2003: " VRML V1.0c[J

line 2004: au BufNewFile,BufRead *.wrl^I^I^Isetf vrml[J

line 2005: [J

line 2006: " Webmacro[J

line 2007: au BufNewFile,BufRead *.wm^I^I^Isetf webmacro[J

line 2008: [J

line 2009: " Wget config[J

line 2010: au BufNewFile,BufRead .wgetrc,wgetrc^I^Isetf wget[J

line 2011: [J

line 2012: " Website MetaLanguage[J

line 2013: au BufNewFile,BufRead *.wml^I^I^Isetf wml[J

line 2014: [J

line 2015: " Winbatch[J

line 2016: au BufNewFile,BufRead *.wbt^I^I^Isetf winbatch[J

line 2017: [J

line 2018: " WSML[J

line 2019: au BufNewFile,BufRead *.wsml^I^I^Isetf wsml[J

line 2020: [J

line 2021: " WvDial[J

line 2022: au BufNewFile,BufRead wvdial.conf,.wvdialrc^Isetf wvdial[J

line 2023: [J

line 2024: " CVS RC file[J

line 2025: au BufNewFile,BufRead .cvsrc^I^I^Isetf cvsrc[J

line 2026: [J

line 2027: " CVS commit file[J

line 2028: au BufNewFile,BufRead cvs\d\+^I^I^Isetf cvs[J

line 2029: [J

line 2030: " WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment[J

line 2031: " lines in a WEB file).[J

line 2037: au BufNewFile,BufRead *.web if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif[J

line 2038: [J

line 2039: " Windows Scripting Host and Windows Script Component[J

line 2040: au BufNewFile,BufRead *.ws[fc]^I^I^Isetf wsh[J

line 2041: [J

line 2042: " XHTML[J

line 2043: au BufNewFile,BufRead *.xhtml,*.xht^I^Isetf xhtml[J

line 2044: [J

line 2045: " X Pixmap (dynamically sets colors, use BufEnter to make it work better)[J

line 2051: au BufEnter *.xpm if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif[J

line 2052: au BufEnter *.xpm2^I^I^I^Isetf xpm2[J

line 2053: [J

line 2054: " XFree86 config[J

line 2059: au BufNewFile,BufRead XF86Config if getline(1) =~ '\<XConfigurator\>' |   let b:xf86c_xfree86_version = 3 | endif | setf xf86conf[J

line 2060: [J

line 2061: " Xorg config[J

line 2062: au BufNewFile,BufRead xorg.conf,xorg.conf-4^Ilet b:xf86c_xfree86_version = 4 | setf xf86conf[J

line 2063: [J

line 2064: " Xinetd conf[J

line 2065: au BufNewFile,BufRead /etc/xinetd.conf^I^Isetf xinetd[J

line 2066: [J

line 2067: " XS Perl extension interface language[J

line 2068: au BufNewFile,BufRead *.xs^I^I^Isetf xs[J

line 2069: [J

line 2070: " X resources file[J

line 2071: au BufNewFile,BufRead .Xdefaults,.Xpdefaults,.Xresources,xdm-config,*.ad setf xdefaults[J

line 2072: [J

line 2073: " Xmath[J

line 2074: au BufNewFile,BufRead *.msc,*.msf^I^Isetf xmath[J

line 2076: au BufNewFile,BufRead *.ms if !s:FTnroff() | setf xmath | endif[J

line 2077: [J

line 2078: " XML[J

line 2085: au BufNewFile,BufRead *.xml if getline(1) . getline(2) . getline(3) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type="xml" |   setf docbk | else |   setf xml | endif[J

line 2086: [J

line 2087: " XMI (holding UML models) is also XML[J

line 2088: au BufNewFile,BufRead *.xmi^I^I^Isetf xml[J

line 2089: [J

line 2090: " CSPROJ files are Visual Studio.NET's XML-based project config files[J

line 2091: au BufNewFile,BufRead *.csproj,*.csproj.user^Isetf xml[J

line 2092: [J

line 2093: " Qt Linguist translation source and Qt User Interface Files are XML[J

line 2094: au BufNewFile,BufRead *.ts,*.ui^I^I^Isetf xml[J

line 2095: [J

line 2096: " TPM's are RDF-based descriptions of TeX packages (Nikolai Weibull)[J

line 2097: au BufNewFile,BufRead *.tpm^I^I^Isetf xml[J

line 2098: [J

line 2099: " Xdg menus[J

line 2100: au BufNewFile,BufRead /etc/xdg/menus/*.menu^Isetf xml[J

line 2101: [J

line 2102: " Xquery[J

line 2103: au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy^Isetf xquery[J

line 2104: [J

line 2105: " XSD[J

line 2106: au BufNewFile,BufRead *.xsd^I^I^Isetf xsd[J

line 2107: [J

line 2108: " Xslt[J

line 2109: au BufNewFile,BufRead *.xsl,*.xslt^I^Isetf xslt[J

line 2110: [J

line 2111: " Yacc[J

line 2112: au BufNewFile,BufRead *.yy^I^I^Isetf yacc[J

line 2113: [J

line 2114: " Yacc or racc[J

line 2115: au BufNewFile,BufRead *.y^I^I^Icall s:FTy()[J

line 2116: [J

line 2117: func! s:FTy()[J

line 2133: [J

line 2134: [J

line 2135: " Yaml[J

line 2136: au BufNewFile,BufRead *.yaml,*.yml^I^Isetf yaml[J

line 2137: [J

line 2138: " Zope[J

line 2139: "   dtml (zope dynamic template markup language), pt (zope page template),[J

line 2140: "   cpt (zope form controller page template)[J

line 2141: au BufNewFile,BufRead *.dtml,*.pt,*.cpt^I^Icall s:FThtml()[J

line 2142: "   zsql (zope sql method)[J

line 2143: au BufNewFile,BufRead *.zsql^I^I^Icall s:SQL()[J

line 2144: [J

line 2145: " Z80 assembler asz80[J

line 2146: au BufNewFile,BufRead *.z8a^I^I^Isetf z8a[J

line 2147: [J

line 2148: augroup END[J

line 2149: [J

line 2150: [J

line 2151: " Source the user-specified filetype file, for backwards compatibility with[J

line 2152: " Vim 5.x.[J

line 2153: if exists("myfiletypefile") && filereadable(expand(myfiletypefile))[J

line 2154:   execute "source " . myfiletypefile[J

line 2155: endif[J

line 2156: [J

line 2157: [J

line 2158: " Check for "*" after loading myfiletypefile, so that scripts.vim is only used[J

line 2159: " when there are no matching file name extensions.[J

line 2160: " Don't do this for compressed files.[J

line 2161: augroup filetypedetect[J

line 2164: au BufNewFile,BufRead * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif[J

line 2165: au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif[J

line 2166: [J

line 2167: [J

line 2168: " Extra checks for when no filetype has been detected now.  Mostly used for[J

line 2169: " patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim[J

line 2170: " script file.[J

line 2171: " Most of these should call s:StarSetf() to avoid names ending in .gz and the[J

line 2172: " like are used.[J

line 2173: [J

line 2174: " Asterisk config file[J

line 2175: au BufNewFile,BufRead *asterisk/*.conf*^I^Icall s:StarSetf('asterisk')[J

line 2176: au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')[J

line 2177: [J

line 2178: " Bazaar version control[J

line 2179: au BufNewFile,BufRead bzr_log.*^I^I^Isetf bzr[J

line 2180: [J

line 2181: " BIND zone[J

line 2182: au BufNewFile,BufRead */named/db.*,*/bind/db.*^Icall s:StarSetf('bindzone')[J

line 2183: [J

line 2184: " Changelog[J

line 2190: au BufNewFile,BufRead [cC]hange[lL]og* if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif[J

line 2191: [J

line 2192: " Crontab[J

line 2193: au BufNewFile,BufRead crontab,crontab.*,/etc/cron.d/*^Icall s:StarSetf('crontab')[J

line 2194: [J

line 2195: " Debian Sources.list[J

line 2196: au BufNewFile,BufRead /etc/apt/sources.list.d/*^Icall s:StarSetf('debsources')[J

line 2197: [J

line 2198: " Dracula[J

line 2199: au BufNewFile,BufRead drac.*^I^I^Icall s:StarSetf('dracula')[J

line 2200: [J

line 2201: " Fvwm[J

line 2202: au BufNewFile,BufRead */.fvwm/*^I^I^Icall s:StarSetf('fvwm')[J

line 2204: au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook let b:fvwm_version = 1 | call s:StarSetf('fvwm')[J

line 2210: au BufNewFile,BufRead *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif[J

line 2211: [J

line 2212: " GTK RC[J

line 2213: au BufNewFile,BufRead .gtkrc*,gtkrc*^I^Icall s:StarSetf('gtkrc')[J

line 2214: [J

line 2215: " Jam[J

line 2216: au BufNewFile,BufRead Prl*.*,JAM*.*^I^Icall s:StarSetf('jam')[J

line 2217: [J

line 2218: " Jargon[J

line 2222: au! BufNewFile,BufRead *jarg* if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif[J

line 2223: [J

line 2224: " Kconfig[J

line 2225: au BufNewFile,BufRead Kconfig.*^I^I^Icall s:StarSetf('kconfig')[J

line 2226: [J

line 2227: " Makefile[J

line 2228: au BufNewFile,BufRead [mM]akefile*^I^Icall s:StarSetf('make')[J

line 2229: [J

line 2230: " Modconf[J

line 2231: au BufNewFile,BufRead /etc/modprobe.*^I^Icall s:StarSetf('modconf')[J

line 2232: [J

line 2233: " Ruby Makefile[J

line 2234: au BufNewFile,BufRead [rR]akefile*^I^Icall s:StarSetf('ruby')[J

line 2235: [J

line 2236: " Mutt setup file[J

line 2237: au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*^I^Icall s:StarSetf('muttrc')[J

line 2238: [J

line 2239: " Nroff macros[J

line 2240: au BufNewFile,BufRead tmac.*^I^I^Icall s:StarSetf('nroff')[J

line 2241: [J

line 2242: " Pam conf[J

line 2243: au BufNewFile,BufRead /etc/pam.d/*^I^Icall s:StarSetf('pamconf')[J

line 2244: [J

line 2245: " Printcap and Termcap[J

line 2249: au BufNewFile,BufRead *printcap* if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif[J

line 2253: au BufNewFile,BufRead *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif[J

line 2254: [J

line 2255: " Vim script[J

line 2256: au BufNewFile,BufRead *vimrc*^I^I^Icall s:StarSetf('vim')[J

line 2257: [J

line 2258: " Subversion commit file[J

line 2259: au BufNewFile,BufRead svn-commit*.tmp^I^Isetf svn[J

line 2260: [J

line 2261: " X resources file[J

line 2262: au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')[J

line 2263: [J

line 2264: " XFree86 config[J

line 2266: au BufNewFile,BufRead XF86Config-4* let b:xf86c_xfree86_version = 4 | call s:StarSetf('xf86conf')[J

line 2271: au BufNewFile,BufRead XF86Config* if getline(1) =~ '\<XConfigurator\>'|  let b:xf86c_xfree86_version = 3|endif|call s:StarSetf('xf86conf')[J

line 2272: [J

line 2273: " X11 xmodmap[J

line 2274: au BufNewFile,BufRead *xmodmap*^I^I^Icall s:StarSetf('xmodmap')[J

line 2275: [J

line 2276: " Xinetd conf[J

line 2277: au BufNewFile,BufRead /etc/xinetd.d/*^I^Icall s:StarSetf('xinetd')[J

line 2278: [J

line 2279: " Z-Shell script[J

line 2280: au BufNewFile,BufRead zsh*,zlog*^I^Icall s:StarSetf('zsh')[J

line 2281: [J

line 2282: [J

line 2283: " Generic configuration file (check this last, it's just guessing!)[J

line 2289: au BufNewFile,BufRead,StdinReadPost * if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif[J

line 2290: [J

line 2291: " Use the plugin-filetype checks last, they may overrule any of the previously[J

line 2292: " detected filetypes.[J

line 2293: runtime! ftdetect/*.vim[J

Searching for "ftdetect/*.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/ftdetect/*.vim"[J
Searching for "/var/lib/vim/addons/ftdetect/*.vim"[J
Searching for "/usr/share/vim/vimfiles/ftdetect/*.vim"[J
Searching for "/usr/share/vim/vim71/ftdetect/*.vim"[J
Searching for "/usr/share/vim/vimfiles/after/ftdetect/*.vim"[J
Searching for "/var/lib/vim/addons/after/ftdetect/*.vim"[J
Searching for "/home/jsuggs/.vim/after/ftdetect/*.vim"[J
not found in 'runtimepath': "ftdetect/*.vim"[J
line 2294: [J

line 2295: augroup END[J

line 2296: [J

line 2297: [J

line 2298: " If the GUI is already running, may still need to install the Syntax menu.[J

line 2299: " Don't do it when the 'M' flag is included in 'guioptions'.[J

line 2301: if has("menu") && has("gui_running") && !exists("did_install_syntax_menu") && &guioptions !~# "M"[J

line 2302:   source <sfile>:p:h/menu.vim[J

line 2303: endif[J

line 2304: [J

line 2305: " Function called for testing all functions defined here.  These are[J

line 2306: " script-local, thus need to be executed here.[J

line 2307: " Returns a string with error messages (hopefully empty).[J

line 2308: func! TestFiletypeFuncs(testlist)[J

line 2319: [J

line 2320: " Restore 'cpoptions'[J

line 2321: let &cpo = s:cpo_save[J

line 2322: unlet s:cpo_save[J

finished sourcing /usr/share/vim/vim71/filetype.vim[J
continuing in /usr/share/vim/vim71/syntax/syntax.vim[J
Searching for "/usr/share/vim/vimfiles/after/filetype.vim"[J
Searching for "/var/lib/vim/addons/after/filetype.vim"[J
Searching for "/home/jsuggs/.vim/after/filetype.vim"[J
line 26:   let s:did_ft = 0[J

line 27: endif[J

line 28: [J

line 29: " Set up the connection between FileType and Syntax autocommands.[J

line 30: " This makes the syntax automatically set when the file type is detected.[J

line 31: augroup syntaxset[J

line 32:   au! FileType *^Iexe "set syntax=" . expand("<amatch>")[J

line 33: augroup END[J

line 34: [J

line 35: [J

line 36: " Execute the syntax autocommands for the each buffer.[J

line 37: " If the filetype wasn't detected yet, do that now.[J

line 38: " Always do the syntaxset autocommands, for buffers where the 'filetype'[J

line 39: " already was set manually (e.g., help buffers).[J

line 40: doautoall syntaxset FileType[J

line 41: if !s:did_ft[J

line 42:   doautoall filetypedetect BufRead[J

line 43: endif[J

finished sourcing /usr/share/vim/vim71/syntax/syntax.vim[J
continuing in /home/jsuggs/.vimrc[J
line 20: set t_Co=256 [J

Searching for "syntax/syncolor.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 20: sourcing "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 12[J

line 4: [J

line 5: " This file sets up the default methods for highlighting.[J

line 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".[J

line 7: " Also used from init_highlight().[J

line 8: [J

line 9: if !exists("syntax_cmd") || syntax_cmd == "on"[J

line 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links[J

line 11:   command -nargs=* SynColor hi <args>[J

line 12:   command -nargs=* SynLink hi link <args>[J

line 13: else[J

line 14:   if syntax_cmd == "enable"[J

line 15:     " ":syntax enable" keeps any existing colors[J

line 16:     command -nargs=* SynColor hi def <args>[J

line 17:     command -nargs=* SynLink hi def link <args>[J

line 18:   elseif syntax_cmd == "reset"[J

line 19:     " ":syntax reset" resets all colors to the default[J

line 20:     command -nargs=* SynColor hi <args>[J

line 21:     command -nargs=* SynLink hi! link <args>[J

line 22:   else[J

line 23:     " User defined syncolor file has already set the colors.[J

line 24:     finish[J

line 25:   endif[J

line 26: endif[J

line 27: [J

line 28: " Many terminals can only use six different colors (plus black and white).[J

line 29: " Therefore the number of colors used is kept low. It doesn't look nice with[J

line 30: " too many colors anyway.[J

line 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.[J

line 32: " There are two sets of defaults: for a dark and a light background.[J

line 33: if &background == "dark"[J

line 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 43: else[J

line 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 44: hi Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 45: hi Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 46: hi Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 47: hi Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 48: hi Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 49: hi PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 50: hi Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 51: hi Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 52: hi Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 53: endif[J

line 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 56: [J

line 57: " Common groups that link to default highlighting.[J

line 58: " You can specify other highlighting easily.[J

line 59: SynLink String^I^IConstant[J

line 59: hi link String^I^IConstant[J

line 60: SynLink Character^IConstant[J

line 60: hi link Character^IConstant[J

line 61: SynLink Number^I^IConstant[J

line 61: hi link Number^I^IConstant[J

line 62: SynLink Boolean^I^IConstant[J

line 62: hi link Boolean^I^IConstant[J

line 63: SynLink Float^I^INumber[J

line 63: hi link Float^I^INumber[J

line 64: SynLink Function^IIdentifier[J

line 64: hi link Function^IIdentifier[J

line 65: SynLink Conditional^IStatement[J

line 65: hi link Conditional^IStatement[J

line 66: SynLink Repeat^I^IStatement[J

line 66: hi link Repeat^I^IStatement[J

line 67: SynLink Label^I^IStatement[J

line 67: hi link Label^I^IStatement[J

line 68: SynLink Operator^IStatement[J

line 68: hi link Operator^IStatement[J

line 69: SynLink Keyword^I^IStatement[J

line 69: hi link Keyword^I^IStatement[J

line 70: SynLink Exception^IStatement[J

line 70: hi link Exception^IStatement[J

line 71: SynLink Include^I^IPreProc[J

line 71: hi link Include^I^IPreProc[J

line 72: SynLink Define^I^IPreProc[J

line 72: hi link Define^I^IPreProc[J

line 73: SynLink Macro^I^IPreProc[J

line 73: hi link Macro^I^IPreProc[J

line 74: SynLink PreCondit^IPreProc[J

line 74: hi link PreCondit^IPreProc[J

line 75: SynLink StorageClass^IType[J

line 75: hi link StorageClass^IType[J

line 76: SynLink Structure^IType[J

line 76: hi link Structure^IType[J

line 77: SynLink Typedef^I^IType[J

line 77: hi link Typedef^I^IType[J

line 78: SynLink Tag^I^ISpecial[J

line 78: hi link Tag^I^ISpecial[J

line 79: SynLink SpecialChar^ISpecial[J

line 79: hi link SpecialChar^ISpecial[J

line 80: SynLink Delimiter^ISpecial[J

line 80: hi link Delimiter^ISpecial[J

line 81: SynLink SpecialComment^ISpecial[J

line 81: hi link SpecialComment^ISpecial[J

line 82: SynLink Debug^I^ISpecial[J

line 82: hi link Debug^I^ISpecial[J

line 83: [J

line 84: delcommand SynColor[J

line 85: delcommand SynLink[J

finished sourcing /usr/share/vim/vim71/syntax/syncolor.vim[J
continuing in /home/jsuggs/.vimrc[J
Searching for "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/after/syntax/syncolor.vim"[J
Searching for "/home/jsuggs/.vim/after/syntax/syncolor.vim"[J
line 21: colo leo[J

Searching for "colors/leo.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/colors/leo.vim"[J
line 21: sourcing "/home/jsuggs/.vim/colors/leo.vim"[J
line 1: " Vim color file[J

line 2: " Maintainer:^I^ILorenzo Leonini <vim-theme[a]leonini[.]net>[J

line 3: " Last Change:^I2010 Mar 8[J

line 4: " URL:^I^I^I^I^Ihttp://www.leonini.net[J

line 5: [J

line 6: " Description:[J

line 7: " A contrasted theme for long programming sessions.[J

line 8: " Specially for 256-colors term (xterm, Eterm, konsole, gnome-terminal, ...)[J

line 9: " Very good with Ruby, C, Lua, PHP, HTML, shell...[J

line 10: " (but no using language specific settings)[J

line 11: [J

line 12: " Note:[J

line 13: " If your term report 8 colors (but is 256 capable), put 'set t_Co=256'[J

line 14: " in your .vimrc[J

line 15: [J

line 16: " Tips:[J

line 17: " :verbose hi StatusLine[J

line 18: " Color numbers (0-255) see:[J

line 19: "^I^Ihttp://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html[J

line 20: "^I:so $VIMRUNTIME/syntax/hitest.vim[J

line 21: [J

line 22: " 0.94[J

line 23: " Folding[J

line 24: "[J

line 25: " 0.93[J

line 26: " Console and GUI are deliberately differents.[J

line 27: "[J

line 28: " 0.92[J

line 29: " Fixed visual in GUI mode[J

line 30: " Dark line numbers[J

line 31: "[J

line 32: " 0.91[J

line 33: " fixed cursor color with MatchParen[J

line 34: "[J

line 35: " 0.9[J

line 36: " more blue (blue <=> green swap)[J

line 37: " lot of changes, some may prefer previous version[J

line 38: "[J

line 39: " 0.82[J

line 40: " menu backgrounf lighter[J

line 41: " LineNr[J

line 42: " gui comments in italic[J

line 43: " remove some default bold in gui[J

line 44: "[J

line 45: " 0.81[J

line 46: " invisible char[J

line 47: " line number[J

line 48: " status bar[J

line 49: " add MatchParen[J

line 50: " add Underlined[J

line 51: "[J

line 52: " 0.8[J

line 53: " GUI fixed, color < 16 fixed[J

line 54: " comments from 247 => 249[J

line 55: " main color 255 => 254[J

line 56: " boolean and numbers more visible[J

line 57: "[J

line 58: " 0.6[J

line 59: " Synchro with GUI[J

line 60: [J

line 61: " 0.5[J

line 62: " Ligther vertical separation[J

line 63: " Better diff[J

line 64: " Better pmenu[J

line 65: " Uniformisation between status bar, tabs and pmenu[J

line 66: " Added spell hl[J

line 67: " Change search highlight (I don't use it...)[J

line 68: " Folding done[J

line 69: " All in 256 code[J

line 70: [J

line 71: if !has("gui_running")[J

line 72: ^Iif &t_Co != 256[J

line 73: ^I^Iechomsg "err: Please use a 256-colors terminal (so that t_Co=256 could be set)."[J

line 74: ^I^Iechomsg ""[J

line 75: ^I^Ifinish[J

line 76: ^Iend[J

line 77: endif[J

line 78: [J

line 79: let g:colors_name = "leo256"[J

line 80: [J

line 81: set background=dark[J

line 82: if v:version > 580[J

line 83: ^Ihighlight clear[J

Searching for "syntax/syncolor.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 83: sourcing "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 12[J

line 4: [J

line 5: " This file sets up the default methods for highlighting.[J

line 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".[J

line 7: " Also used from init_highlight().[J

line 8: [J

line 9: if !exists("syntax_cmd") || syntax_cmd == "on"[J

line 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links[J

line 11:   command -nargs=* SynColor hi <args>[J

line 12:   command -nargs=* SynLink hi link <args>[J

line 13: else[J

line 14:   if syntax_cmd == "enable"[J

line 15:     " ":syntax enable" keeps any existing colors[J

line 16:     command -nargs=* SynColor hi def <args>[J

line 17:     command -nargs=* SynLink hi def link <args>[J

line 18:   elseif syntax_cmd == "reset"[J

line 19:     " ":syntax reset" resets all colors to the default[J

line 20:     command -nargs=* SynColor hi <args>[J

line 21:     command -nargs=* SynLink hi! link <args>[J

line 22:   else[J

line 23:     " User defined syncolor file has already set the colors.[J

line 24:     finish[J

line 25:   endif[J

line 26: endif[J

line 27: [J

line 28: " Many terminals can only use six different colors (plus black and white).[J

line 29: " Therefore the number of colors used is kept low. It doesn't look nice with[J

line 30: " too many colors anyway.[J

line 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.[J

line 32: " There are two sets of defaults: for a dark and a light background.[J

line 33: if &background == "dark"[J

line 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 34: hi Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 35: hi Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 36: hi Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 37: hi Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 38: hi Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 39: hi PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 40: hi Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 41: hi Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 42: hi Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 43: else[J

line 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 53: endif[J

line 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 56: [J

line 57: " Common groups that link to default highlighting.[J

line 58: " You can specify other highlighting easily.[J

line 59: SynLink String^I^IConstant[J

line 59: hi link String^I^IConstant[J

line 60: SynLink Character^IConstant[J

line 60: hi link Character^IConstant[J

line 61: SynLink Number^I^IConstant[J

line 61: hi link Number^I^IConstant[J

line 62: SynLink Boolean^I^IConstant[J

line 62: hi link Boolean^I^IConstant[J

line 63: SynLink Float^I^INumber[J

line 63: hi link Float^I^INumber[J

line 64: SynLink Function^IIdentifier[J

line 64: hi link Function^IIdentifier[J

line 65: SynLink Conditional^IStatement[J

line 65: hi link Conditional^IStatement[J

line 66: SynLink Repeat^I^IStatement[J

line 66: hi link Repeat^I^IStatement[J

line 67: SynLink Label^I^IStatement[J

line 67: hi link Label^I^IStatement[J

line 68: SynLink Operator^IStatement[J

line 68: hi link Operator^IStatement[J

line 69: SynLink Keyword^I^IStatement[J

line 69: hi link Keyword^I^IStatement[J

line 70: SynLink Exception^IStatement[J

line 70: hi link Exception^IStatement[J

line 71: SynLink Include^I^IPreProc[J

line 71: hi link Include^I^IPreProc[J

line 72: SynLink Define^I^IPreProc[J

line 72: hi link Define^I^IPreProc[J

line 73: SynLink Macro^I^IPreProc[J

line 73: hi link Macro^I^IPreProc[J

line 74: SynLink PreCondit^IPreProc[J

line 74: hi link PreCondit^IPreProc[J

line 75: SynLink StorageClass^IType[J

line 75: hi link StorageClass^IType[J

line 76: SynLink Structure^IType[J

line 76: hi link Structure^IType[J

line 77: SynLink Typedef^I^IType[J

line 77: hi link Typedef^I^IType[J

line 78: SynLink Tag^I^ISpecial[J

line 78: hi link Tag^I^ISpecial[J

line 79: SynLink SpecialChar^ISpecial[J

line 79: hi link SpecialChar^ISpecial[J

line 80: SynLink Delimiter^ISpecial[J

line 80: hi link Delimiter^ISpecial[J

line 81: SynLink SpecialComment^ISpecial[J

line 81: hi link SpecialComment^ISpecial[J

line 82: SynLink Debug^I^ISpecial[J

line 82: hi link Debug^I^ISpecial[J

line 83: [J

line 84: delcommand SynColor[J

line 85: delcommand SynLink[J

finished sourcing /usr/share/vim/vim71/syntax/syncolor.vim[J
continuing in /home/jsuggs/.vim/colors/leo.vim[J
Searching for "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/after/syntax/syncolor.vim"[J
Searching for "/home/jsuggs/.vim/after/syntax/syncolor.vim"[J
line 84: ^Iif exists("syntax_on")[J

line 85: ^I^Isyntax reset[J

line 85: runtime! syntax/syncolor.vim[J

Searching for "syntax/syncolor.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 85: sourcing "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 12[J

line 4: [J

line 5: " This file sets up the default methods for highlighting.[J

line 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".[J

line 7: " Also used from init_highlight().[J

line 8: [J

line 9: if !exists("syntax_cmd") || syntax_cmd == "on"[J

line 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links[J

line 11:   command -nargs=* SynColor hi <args>[J

line 12:   command -nargs=* SynLink hi link <args>[J

line 13: else[J

line 14:   if syntax_cmd == "enable"[J

line 15:     " ":syntax enable" keeps any existing colors[J

line 16:     command -nargs=* SynColor hi def <args>[J

line 17:     command -nargs=* SynLink hi def link <args>[J

line 18:   elseif syntax_cmd == "reset"[J

line 19:     " ":syntax reset" resets all colors to the default[J

line 20:     command -nargs=* SynColor hi <args>[J

line 21:     command -nargs=* SynLink hi! link <args>[J

line 22:   else[J

line 23:     " User defined syncolor file has already set the colors.[J

line 24:     finish[J

line 25:   endif[J

line 26: endif[J

line 27: [J

line 28: " Many terminals can only use six different colors (plus black and white).[J

line 29: " Therefore the number of colors used is kept low. It doesn't look nice with[J

line 30: " too many colors anyway.[J

line 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.[J

line 32: " There are two sets of defaults: for a dark and a light background.[J

line 33: if &background == "dark"[J

line 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 34: hi Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 35: hi Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 36: hi Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 37: hi Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 38: hi Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 39: hi PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 40: hi Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 41: hi Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 42: hi Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 43: else[J

line 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 53: endif[J

line 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 56: [J

line 57: " Common groups that link to default highlighting.[J

line 58: " You can specify other highlighting easily.[J

line 59: SynLink String^I^IConstant[J

line 59: hi! link String^I^IConstant[J

line 60: SynLink Character^IConstant[J

line 60: hi! link Character^IConstant[J

line 61: SynLink Number^I^IConstant[J

line 61: hi! link Number^I^IConstant[J

line 62: SynLink Boolean^I^IConstant[J

line 62: hi! link Boolean^I^IConstant[J

line 63: SynLink Float^I^INumber[J

line 63: hi! link Float^I^INumber[J

line 64: SynLink Function^IIdentifier[J

line 64: hi! link Function^IIdentifier[J

line 65: SynLink Conditional^IStatement[J

line 65: hi! link Conditional^IStatement[J

line 66: SynLink Repeat^I^IStatement[J

line 66: hi! link Repeat^I^IStatement[J

line 67: SynLink Label^I^IStatement[J

line 67: hi! link Label^I^IStatement[J

line 68: SynLink Operator^IStatement[J

line 68: hi! link Operator^IStatement[J

line 69: SynLink Keyword^I^IStatement[J

line 69: hi! link Keyword^I^IStatement[J

line 70: SynLink Exception^IStatement[J

line 70: hi! link Exception^IStatement[J

line 71: SynLink Include^I^IPreProc[J

line 71: hi! link Include^I^IPreProc[J

line 72: SynLink Define^I^IPreProc[J

line 72: hi! link Define^I^IPreProc[J

line 73: SynLink Macro^I^IPreProc[J

line 73: hi! link Macro^I^IPreProc[J

line 74: SynLink PreCondit^IPreProc[J

line 74: hi! link PreCondit^IPreProc[J

line 75: SynLink StorageClass^IType[J

line 75: hi! link StorageClass^IType[J

line 76: SynLink Structure^IType[J

line 76: hi! link Structure^IType[J

line 77: SynLink Typedef^I^IType[J

line 77: hi! link Typedef^I^IType[J

line 78: SynLink Tag^I^ISpecial[J

line 78: hi! link Tag^I^ISpecial[J

line 79: SynLink SpecialChar^ISpecial[J

line 79: hi! link SpecialChar^ISpecial[J

line 80: SynLink Delimiter^ISpecial[J

line 80: hi! link Delimiter^ISpecial[J

line 81: SynLink SpecialComment^ISpecial[J

line 81: hi! link SpecialComment^ISpecial[J

line 82: SynLink Debug^I^ISpecial[J

line 82: hi! link Debug^I^ISpecial[J

line 83: [J

line 84: delcommand SynColor[J

line 85: delcommand SynLink[J

finished sourcing /usr/share/vim/vim71/syntax/syncolor.vim[J
continuing in /home/jsuggs/.vim/colors/leo.vim[J
Searching for "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/after/syntax/syncolor.vim"[J
Searching for "/home/jsuggs/.vim/after/syntax/syncolor.vim"[J
line 86: ^Iendif[J

line 87: endif[J

line 88: [J

line 89: " ### Normal should come first[J

line 90: [J

line 91: " console-gui different[J

line 92: hi Normal^I^I^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=232 guifg=#ffffff^Iguibg=#121212[J

Searching for "syntax/syncolor.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vimfiles/syntax/syncolor.vim"[J
Searching for "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 92: sourcing "/usr/share/vim/vim71/syntax/syncolor.vim"[J
line 1: " Vim syntax support file[J

line 2: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 3: " Last Change:^I2001 Sep 12[J

line 4: [J

line 5: " This file sets up the default methods for highlighting.[J

line 6: " It is loaded from "synload.vim" and from Vim for ":syntax reset".[J

line 7: " Also used from init_highlight().[J

line 8: [J

line 9: if !exists("syntax_cmd") || syntax_cmd == "on"[J

line 10:   " ":syntax on" works like in Vim 5.7: set colors but keep links[J

line 11:   command -nargs=* SynColor hi <args>[J

line 12:   command -nargs=* SynLink hi link <args>[J

line 13: else[J

line 14:   if syntax_cmd == "enable"[J

line 15:     " ":syntax enable" keeps any existing colors[J

line 16:     command -nargs=* SynColor hi def <args>[J

line 17:     command -nargs=* SynLink hi def link <args>[J

line 18:   elseif syntax_cmd == "reset"[J

line 19:     " ":syntax reset" resets all colors to the default[J

line 20:     command -nargs=* SynColor hi <args>[J

line 21:     command -nargs=* SynLink hi! link <args>[J

line 22:   else[J

line 23:     " User defined syncolor file has already set the colors.[J

line 24:     finish[J

line 25:   endif[J

line 26: endif[J

line 27: [J

line 28: " Many terminals can only use six different colors (plus black and white).[J

line 29: " Therefore the number of colors used is kept low. It doesn't look nice with[J

line 30: " too many colors anyway.[J

line 31: " Careful with "cterm=bold", it changes the color to bright for some terminals.[J

line 32: " There are two sets of defaults: for a dark and a light background.[J

line 33: if &background == "dark"[J

line 34:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#80a0ff guibg=NONE[J

line 35:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=Magenta ctermbg=NONE gui=NONE guifg=#ffa0a0 guibg=NONE[J

line 36:   SynColor Special^Iterm=bold cterm=NONE ctermfg=LightRed ctermbg=NONE gui=NONE guifg=Orange guibg=NONE[J

line 37:   SynColor Identifier^Iterm=underline cterm=bold ctermfg=Cyan ctermbg=NONE gui=NONE guifg=#40ffff guibg=NONE[J

line 38:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Yellow ctermbg=NONE gui=bold guifg=#ffff60 guibg=NONE[J

line 39:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=LightBlue ctermbg=NONE gui=NONE guifg=#ff80ff guibg=NONE[J

line 40:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=LightGreen ctermbg=NONE gui=bold guifg=#60ff60 guibg=NONE[J

line 41:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=LightBlue gui=underline guifg=#80a0ff[J

line 42:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=black ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 43: else[J

line 44:   SynColor Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 44: hi Comment^Iterm=bold cterm=NONE ctermfg=DarkBlue ctermbg=NONE gui=NONE guifg=Blue guibg=NONE[J

line 45:   SynColor Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 45: hi Constant^Iterm=underline cterm=NONE ctermfg=DarkRed ctermbg=NONE gui=NONE guifg=Magenta guibg=NONE[J

line 46:   SynColor Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 46: hi Special^Iterm=bold cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=SlateBlue guibg=NONE[J

line 47:   SynColor Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 47: hi Identifier^Iterm=underline cterm=NONE ctermfg=DarkCyan ctermbg=NONE gui=NONE guifg=DarkCyan guibg=NONE[J

line 48:   SynColor Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 48: hi Statement^Iterm=bold cterm=NONE ctermfg=Brown ctermbg=NONE gui=bold guifg=Brown guibg=NONE[J

line 49:   SynColor PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 49: hi PreProc^Iterm=underline cterm=NONE ctermfg=DarkMagenta ctermbg=NONE gui=NONE guifg=Purple guibg=NONE[J

line 50:   SynColor Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 50: hi Type^I^Iterm=underline cterm=NONE ctermfg=DarkGreen ctermbg=NONE gui=bold guifg=SeaGreen guibg=NONE[J

line 51:   SynColor Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 51: hi Underlined^Iterm=underline cterm=underline ctermfg=DarkMagenta gui=underline guifg=SlateBlue[J

line 52:   SynColor Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 52: hi Ignore^Iterm=NONE cterm=NONE ctermfg=white ctermbg=NONE gui=NONE guifg=bg guibg=NONE[J

line 53: endif[J

line 54: SynColor Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 54: hi Error^I^Iterm=reverse cterm=NONE ctermfg=White ctermbg=Red gui=NONE guifg=White guibg=Red[J

line 55: SynColor Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 55: hi Todo^I^Iterm=standout cterm=NONE ctermfg=Black ctermbg=Yellow gui=NONE guifg=Blue guibg=Yellow[J

line 56: [J

line 57: " Common groups that link to default highlighting.[J

line 58: " You can specify other highlighting easily.[J

line 59: SynLink String^I^IConstant[J

line 59: hi link String^I^IConstant[J

line 60: SynLink Character^IConstant[J

line 60: hi link Character^IConstant[J

line 61: SynLink Number^I^IConstant[J

line 61: hi link Number^I^IConstant[J

line 62: SynLink Boolean^I^IConstant[J

line 62: hi link Boolean^I^IConstant[J

line 63: SynLink Float^I^INumber[J

line 63: hi link Float^I^INumber[J

line 64: SynLink Function^IIdentifier[J

line 64: hi link Function^IIdentifier[J

line 65: SynLink Conditional^IStatement[J

line 65: hi link Conditional^IStatement[J

line 66: SynLink Repeat^I^IStatement[J

line 66: hi link Repeat^I^IStatement[J

line 67: SynLink Label^I^IStatement[J

line 67: hi link Label^I^IStatement[J

line 68: SynLink Operator^IStatement[J

line 68: hi link Operator^IStatement[J

line 69: SynLink Keyword^I^IStatement[J

line 69: hi link Keyword^I^IStatement[J

line 70: SynLink Exception^IStatement[J

line 70: hi link Exception^IStatement[J

line 71: SynLink Include^I^IPreProc[J

line 71: hi link Include^I^IPreProc[J

line 72: SynLink Define^I^IPreProc[J

line 72: hi link Define^I^IPreProc[J

line 73: SynLink Macro^I^IPreProc[J

line 73: hi link Macro^I^IPreProc[J

line 74: SynLink PreCondit^IPreProc[J

line 74: hi link PreCondit^IPreProc[J

line 75: SynLink StorageClass^IType[J

line 75: hi link StorageClass^IType[J

line 76: SynLink Structure^IType[J

line 76: hi link Structure^IType[J

line 77: SynLink Typedef^I^IType[J

line 77: hi link Typedef^I^IType[J

line 78: SynLink Tag^I^ISpecial[J

line 78: hi link Tag^I^ISpecial[J

line 79: SynLink SpecialChar^ISpecial[J

line 79: hi link SpecialChar^ISpecial[J

line 80: SynLink Delimiter^ISpecial[J

line 80: hi link Delimiter^ISpecial[J

line 81: SynLink SpecialComment^ISpecial[J

line 81: hi link SpecialComment^ISpecial[J

line 82: SynLink Debug^I^ISpecial[J

line 82: hi link Debug^I^ISpecial[J

line 83: [J

line 84: delcommand SynColor[J

line 85: delcommand SynLink[J

finished sourcing /usr/share/vim/vim71/syntax/syncolor.vim[J
continuing in /home/jsuggs/.vim/colors/leo.vim[J
Searching for "/usr/share/vim/vimfiles/after/syntax/syncolor.vim"[J
Searching for "/var/lib/vim/addons/after/syntax/syncolor.vim"[J
Searching for "/home/jsuggs/.vim/after/syntax/syncolor.vim"[J
line 93: hi CursorLine^I^Icterm=none^I^Ictermbg=16^I^Iguibg=#050505[J

line 94: hi SpecialKey^I^Icterm=none^I^Ictermfg=245^I^Ictermbg=233^I^Iguifg=#8a8a8a^Iguibg=#090909[J

line 95: hi Folded^I^I^I^Icterm=none^I^Ictermfg=110^I^Ictermbg=233^I^Iguifg=#87afd7^Iguibg=#000000[J

line 96: [J

line 97: [J

line 98: hi Cursor^I^I^I^Icterm=none^I^Ictermfg=bg^I^Ictermbg=fg^Iguibg=fg^Iguifg=bg[J

line 99: hi DiffAdd^I^I^Icterm=none^I^Ictermbg=235^I^Iguibg=#262626[J

line 100: hi DiffChange^I^Icterm=none^I^Ictermbg=235^I^Iguibg=#262626[J

line 101: hi DiffDelete^I^Icterm=none^I^Ictermfg=238^I^Ictermbg=244^I^Iguifg=#444444^Iguibg=#808080[J

line 102: hi DiffText^I^I^Icterm=bold^I^Ictermfg=255^I^Ictermbg=196^I^Iguifg=#ffffff[J

line 103: hi Directory^I^Icterm=none^I^Ictermfg=196[J

line 104: hi ErrorMsg^I^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=160^I^Iguifg=#ffffff[J

line 105: hi FoldColumn^I^Icterm=none^I^Ictermfg=110^I^Ictermbg=16^I^Iguifg=#87afd7 guibg=#000000[J

line 106: hi IncSearch^I^Icterm=reverse[J

line 107: "hi LineNr^I^I^I^Icterm=none^I^Ictermfg=229^I^Ictermbg=16^I^Iguifg=#ffff87^Iguibg=#000000[J

line 108: "hi LineNr^I^I^I^Icterm=none^I^Ictermfg=27^I^Ictermbg=16^I^Iguifg=#005fff^Iguibg=#000000[J

line 109: hi LineNr^I^I^I^Icterm=none^I^Ictermfg=239^I^Ictermbg=16^I^Iguifg=#4e4e4e^Iguibg=#000000[J

line 110: hi ModeMsg^I^I^Icterm=bold[J

line 111: hi MoreMsg^I^I^Icterm=none^I^Ictermfg=40[J

line 112: hi NonText^I^I^Icterm=none^I^Ictermfg=21[J

line 113: hi Question^I^I^Icterm=none^I^Ictermfg=40[J

line 114: hi Search^I^I^I^Icterm=none^I^Ictermfg=16^I^Ictermbg=248^I^Iguifg=#000000^Iguibg=#a8a8a8[J

line 115: hi SignColumn^I^Icterm=none^I^Ictermbg=16^I^Iguibg=#000000[J

line 116: hi StatusLine^I^Icterm=bold^I^Ictermfg=255^I^Ictermbg=19^I^Iguifg=#0000af^Iguibg=#ffffff[J

line 117: hi StatusLineNC^Icterm=none^I^Ictermfg=252^I^Ictermbg=17^I^Iguifg=#00005f guibg=#d0d0d0[J

line 118: hi Title^I^I^I^Icterm=none^I^Ictermfg=33[J

line 119: hi VertSplit^I^Icterm=none^I^Ictermfg=254^I^Ictermbg=16^I^Iguifg=#000000 guibg=#eeeeee[J

line 120: hi Visual^I^I^I^Icterm=reverse^Ictermbg=none^I^I^I^I^I^I^I^Igui=reverse^I^Iguibg=#080808[J

line 121: hi VisualNOS^I^Icterm=underline,bold[J

line 122: hi WarningMsg^I^Icterm=none^I^Ictermfg=255^I^Iguifg=#ffffff[J

line 123: hi WildMenu^I^I^Icterm=none^I^Ictermfg=16^I^Ictermbg=11[J

line 124: [J

line 125: if v:version >= 700[J

line 126: ^Ihi MatchParen^I^Icterm=none^I^Ictermfg=190^I^Ictermbg=20^I^Iguifg=#d7ff00^Iguibg=#0000d7[J

line 127: [J

line 128: ^I" light[J

line 129: ^I"hi Pmenu^I^I^I^Icterm=none^Ictermfg=16^I^Ictermbg=252[J

line 130: ^I"hi PmenuSel^I^I^Icterm=none^Ictermfg=255^I^Ictermbg=21[J

line 131: ^I"hi PmenuSbar^I^Icterm=none^Ictermfg=240^I^Ictermbg=240[J

line 132:   "hi PmenuThumb^I^Icterm=none^Ictermfg=255^I^Ictermbg=255[J

line 133: [J

line 134: ^I"dark[J

line 135: ^Ihi Pmenu^I^I^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=235^I^Iguifg=#ffffff^I^Iguibg=#262626[J

line 136: ^Ihi PmenuSel^I^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=21^I^Iguifg=#ffffff^I^Iguibg=#0000ff[J

line 137: ^Ihi PmenuSbar^I^Icterm=none^I^Ictermfg=240^I^Ictermbg=240^I^Iguibg=#444444[J

line 138:   hi PmenuThumb^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=255^I^Iguifg=#ffffff[J

line 139: [J

line 140: ^I" No need for GUI colors[J

line 141: ^Ihi SpellBad^I^I^Icterm=none    ctermfg=16^I^Ictermbg=196[J

line 142: ^Ihi SpellCap^I^I^Icterm=none    ctermfg=16^I^Ictermbg=196[J

line 143: ^Ihi SpellLocal^I^Icterm=none    ctermfg=16^I^Ictermbg=196[J

line 144: ^Ihi SpellRare^I^Icterm=none    ctermfg=16^I^Ictermbg=196[J

line 145: ^I[J

line 146: ^I" No need for GUI colors[J

line 147: ^Ihi TabLine^I^I^Icterm=none^Ictermfg=252^I^Ictermbg=17[J

line 148: ^Ihi TabLineSel^I^Icterm=none^Ictermfg=255^I^Ictermbg=21[J

line 149: ^Ihi TabLineFill^Icterm=none^Ictermfg=17^I^Ictermbg=17[J

line 150: endif[J

line 151: [J

line 152: " ### syntax highlighting[J

line 153: [J

line 154: hi Boolean^I^I^Icterm=none^I^Ictermfg=215^I^Iguifg=#ffaf5f[J

line 155: hi Character^I^Icterm=none^I^Ictermfg=184^I^Iguifg=#d7d700[J

line 156: hi Comment^I^I^Icterm=none^I^Ictermfg=248^I^Igui=italic^I^Iguifg=#a8a8a8[J

line 157: hi Conditional^Icterm=none^I^Ictermfg=33^I^Iguifg=#0087ff[J

line 158: hi Constant^I^I^Icterm=none^I^Ictermfg=226^I^Iguifg=#ffff00[J

line 159: hi Define^I^I^I^Icterm=bold^I^Ictermfg=27^I^Igui=bold^I^I^Iguifg=#005fff[J

line 160: hi Delimiter^I^Icterm=none^I^Ictermfg=196^I^Iguifg=#ff0000[J

line 161: hi Error^I^I^I^Icterm=none^I^Ictermfg=255^I^Ictermbg=9^I^I^Iguifg=#ffffff[J

line 162: hi Exception^I^Icterm=bold^I^Ictermfg=226^I^Igui=bold^I^I^Iguifg=#ffff00[J

line 163: hi Function^I^I^Icterm=none^I^Ictermfg=196^I^Iguifg=#ff0000[J

line 164: hi Identifier^I^Icterm=none^I^Ictermfg=40^I^Igui=none^I^I^Iguifg=#00d700[J

line 165: hi Keyword^I^I^Icterm=none^I^Ictermfg=123^I^Iguifg=#87ffff[J

line 166: hi Number^I^I^I^Icterm=none^I^Ictermfg=209^I^Iguifg=#ff875f[J

line 167: hi Operator^I^I^Icterm=none^I^Ictermfg=226^I^Iguifg=#ffff00[J

line 168: hi PreProc^I^I^Icterm=none^I^Ictermfg=202^I^Iguifg=#ff5f00[J

line 169: hi Special^I^I^Icterm=none^I^Ictermfg=206^I^Ictermbg=234^I^Iguifg=#ff5fd7 guibg=#1c1c1c[J

line 170: hi Statement^I^Icterm=none^I^Ictermfg=171^I^Igui=none^I^I^Iguifg=#d75fff[J

line 171: "hi String^I^I^I^Icterm=none^I^Ictermfg=224^I^Ictermbg=234^I^Iguifg=#ffd7d7^Iguibg=#1c1c1c[J

line 172: hi String^I^I^I^Icterm=none^I^Ictermfg=180^I^Ictermbg=234^I^Iguifg=#d7af87^Iguibg=#1c1c1c[J

line 173: hi Todo^I^I^I^I^Icterm=none^I^Ictermfg=16^I^Ictermbg=226^I^Iguifg=#000000 guibg=#ffff00[J

line 174: hi Type^I^I^I^I^Icterm=none^I^Ictermfg=75^I^Igui=none^I^I^Iguifg=#5fafff[J

line 175: hi Underlined^I^Icterm=underline^Ictermfg=39^Igui=underline^Iguifg=#00afff[J

line 176: [J

line 177: " ADDITIONNAL[J

line 178: hi Repeat^I^Icterm=none^I^Ictermfg=99^I^I^I^Iguifg=#875fff[J

line 179: [J

finished sourcing /home/jsuggs/.vim/colors/leo.vim[J
continuing in /home/jsuggs/.vimrc[J
line 22: set scrolloff=7[J

line 23: set showmatch matchtime=1[J

line 24: "set foldmethod=indent[J

line 25: filetype plugin on[J

Searching for "filetype.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/filetype.vim"[J
Searching for "/var/lib/vim/addons/filetype.vim"[J
Searching for "/usr/share/vim/vimfiles/filetype.vim"[J
Searching for "/usr/share/vim/vim71/filetype.vim"[J
line 25: sourcing "/usr/share/vim/vim71/filetype.vim"[J
line 1: " Vim support file to detect file types[J

line 2: "[J

line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 4: " Last Change:^I2007 May 15[J

line 5: [J

line 6: " Listen very carefully, I will say this only once[J

line 7: if exists("did_load_filetypes")[J

line 8:   finish[J

finished sourcing /usr/share/vim/vim71/filetype.vim[J
continuing in /home/jsuggs/.vimrc[J
Searching for "/usr/share/vim/vimfiles/after/filetype.vim"[J
Searching for "/var/lib/vim/addons/after/filetype.vim"[J
Searching for "/home/jsuggs/.vim/after/filetype.vim"[J
Searching for "ftplugin.vim" in "/home/jsuggs/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim71,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,/home/jsuggs/.vim/after"[J
Searching for "/home/jsuggs/.vim/ftplugin.vim"[J
Searching for "/var/lib/vim/addons/ftplugin.vim"[J
Searching for "/usr/share/vim/vimfiles/ftplugin.vim"[J
Searching for "/usr/share/vim/vim71/ftplugin.vim"[J
line 25: sourcing "/usr/share/vim/vim71/ftplugin.vim"[J
line 1: " Vim support file to switch on loading plugins for file types[J

line 2: "[J

line 3: " Maintainer:^IBram Moolenaar <Bram@vim.org>[J

line 4: " Last change:^I2006 Apr 30[J

line 5: [J

line 6: if exists("did_load_ftplugin")[J

line 7:   finish[J

line 8: endif[J

line 9: let did_load_ftplugin = 1[J

line 10: [J

line 11: augroup filetypeplugin[J

line 12:   au FileType * call s:LoadFTPlugin()[J

line 13: [J

line 14:   func! s:LoadFTPlugin()[J

line 35: augroup END[J

finished sourcing /usr/share/vim/vim71/ftplugin.vim[J
continuing in /home/jsuggs/.vimrc[J
Searching for "/usr/share/vim/vimfiles/after/ftplugin.vim"[J
Searching for "/var/lib/vim/addons/after/ftplugin.vim"[J
Searching for "/home/jsuggs/.vim/after/ftplugin.vim"[J
line 26: [J

line 27: set verbose=0[J

No mapping found[J
Press ENTER or type command to continue[?12l[?25h[?1049h[?1h=[1;90r[?12;25h[?12l[?25h[27m[m[38;5;255m[48;5;232m[H[2J[?25l[1;1H[38;5;239m[48;5;16m  1 [m[38;5;255m[48;5;232m
[38;5;21m~                                                                                                                                                                                                                                                                              [3;1H~                                                                                                                                                                                                                                                                              [4;1H~                                                                                                                                                                                                                                                                              [5;1H~                                                                                                                                                                                                                                                                              [6;1H~                                                                                                                                                                                                                                                                              [7;1H~                                                                                                                                                                                                                                                                              [8;1H~                                                                                                                                                                                                                                                                              [9;1H~                                                                                                                                                                                                                                                                              [10;1H~                                                                                                                                                                                                                                                                              [11;1H~                                                                                                                                                                                                                                                                              [12;1H~                                                                                                                                                                                                                                                                              [13;1H~                                                                                                                                                                                                                                                                              [14;1H~                                                                                                                                                                                                                                                                              [15;1H~                                                                                                                                                                                                                                                                              [16;1H~                                                                                                                                                                                                                                                                              [17;1H~                                                                                                                                                                                                                                                                              [18;1H~                                                                                                                                                                                                                                                                              [19;1H~                                                                                                                                                                                                                                                                              [20;1H~                                                                                                                                                                                                                                                                              [21;1H~                                                                                                                                                                                                                                                                              [22;1H~                                                                                                                                                                                                                                                                              [23;1H~                                                                                                                                                                                                                                                                              [24;1H~                                                                                                                                                                                                                                                                              [25;1H~                                                                                                                                                                                                                                                                              [26;1H~                                                                                                                                                                                                                                                                              [27;1H~                                                                                                                                                                                                                                                                              [28;1H~                                                                                                                                                                                                                                                                              [29;1H~                                                                                                                                                                                                                                                                              [30;1H~                                                                                                                                                                                                                                                                              [31;1H~                                                                                                                                                                                                                                                                              [32;1H~                                                                                                                                                                                                                                                                              [33;1H~                                                                                                                                                                                                                                                                              [34;1H~                                                                                                                                                                                                                                                                              [35;1H~                                                                                                                                                                                                                                                                              [36;1H~                                                                                                                                                                                                                                                                              [37;1H~                                                                                                                                                                                                                                                                              [38;1H~                                                                                                                                                                                                                                                                              [39;1H~                                                                                                                                                                                                                                                                              [40;1H~                                                                                                                                                                                                                                                                              [41;1H~                                                                                                                                                                                                                                                                              [42;1H~                                                                                                                                                                                                                                                                              [43;1H~                                                                                                                                                                                                                                                                              [44;1H~                                                                                                                                                                                                                                                                              [45;1H~                                                                                                                                                                                                                                                                              [46;1H~                                                                                                                                                                                                                                                                              [47;1H~                                                                                                                                                                                                                                                                              [48;1H~                                                                                                                                                                                                                                                                              [49;1H~                                                                                                                                                                                                                                                                              [50;1H~                                                                                                                                                                                                                                                                              [51;1H~                                                                                                                                                                                                                                                                              [52;1H~                                                                                                                                                                                                                                                                              [53;1H~                                                                                                                                                                                                                                                                              [54;1H~                                                                                                                                                                                                                                                                              [55;1H~                                                                                                                                                                                                                                                                              [56;1H~                                                                                                                                                                                                                                                                              [57;1H~                                                                                                                                                                                                                                                                              [58;1H~                                                                                                                                                                                                                                                                              [59;1H~                                                                                                                                                                                                                                                                              [60;1H~                                                                                                                                                                                                                                                                              [61;1H~                                                                                                                                                                                                                                                                              [62;1H~                                                                                                                                                                                                                                                                              [63;1H~                                                                                                                                                                                                                                                                              [64;1H~                                                                                                                                                                                                                                                                              [65;1H~                                                                                                                                                                                                                                                                              [66;1H~                                                                                                                                                                                                                                                                              [67;1H~                                                                                                                                                                                                                                                                              [68;1H~                                                                                                                                                                                                                                                                              [69;1H~                                                                                                                                                                                                                                                                              [70;1H~                                                                                                                                                                                                                                                                              [71;1H~                                                                                                                                                                                                                                                                              [72;1H~                                                                                                                                                                                                                                                                              [73;1H~                                                                                                                                                                                                                                                                              [74;1H~                                                                                                                                                                                                                                                                              [75;1H~                                                                                                                                                                                                                                                                              [76;1H~                                                                                                                                                                                                                                                                              [77;1H~                                                                                                                                                                                                                                                                              [78;1H~                                                                                                                                                                                                                                                                              [79;1H~                                                                                                                                                                                                                                                                              [80;1H~                                                                                                                                                                                                                                                                              [81;1H~                                                                                                                                                                                                                                                                              [82;1H~                                                                                                                                                                                                                                                                              [83;1H~                                                                                                                                                                                                                                                                              [84;1H~                                                                                                                                                                                                                                                                              [85;1H~                                                                                                                                                                                                                                                                              [86;1H~                                                                                                                                                                                                                                                                              [87;1H~                                                                                                                                                                                                                                                                              [88;1H~                                                                                                                                                                                                                                                                              [89;1H~                                                                                                                                                                                                                                                                              [m[38;5;255m[48;5;232m[90;254H0,0-1         All[40;128HVIM - Vi IMproved[42;129Hversion 7.1.314[43;124Hby Bram Moolenaar et al.[44;115HVim is open source and freely distributable[46;122HHelp poor children in Uganda![47;113Htype  :help iccf[38;5;245m[48;5;233m<Enter>[m[38;5;255m[48;5;232m       for information [49;113Htype  :q[38;5;245m[48;5;233m<Enter>[m[38;5;255m[48;5;232m               to exit         [50;113Htype  :help[38;5;245m[48;5;233m<Enter>[m[38;5;255m[48;5;232m  or  [38;5;245m[48;5;233m<F1>[m[38;5;255m[48;5;232m  for on-line help[51;113Htype  :help version7[38;5;245m[48;5;233m<Enter>[m[38;5;255m[48;5;232m   for version info[1;5H[?12l[?25h[?25l[90;244H:         [1;5H[90;244H[K[90;1H:[?12l[?25hq[?25l:q[?12l[?25h[?25l[39;49m[?1l>[?12l[?25h[?1049l
